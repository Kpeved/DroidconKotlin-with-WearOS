[
  {
    "groupId": 39661,
    "groupName": "What's New in Android",
    "sessions": [
      {
        "questionAnswers": [],
        "id": "281827",
        "title": "Your new Data Safety section on Google Play",
        "description": "In October, developers can start filling out information in Play Console for the upcoming Data Safety section in Google Play, where developers can showcase their privacy and security practices and explain to users what data the app uses and why.",
        "startsAt": "2021-10-20T11:10:00",
        "endsAt": "2021-10-20T11:30:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "ee1e83e0-a2e1-4c67-a993-2565529143e2",
            "name": "Aisha Iqbal"
          },
          {
            "id": "37847a78-921b-49ab-a9ad-d03c395b04fa",
            "name": "Tina Sriskandarajah"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39661,
                "name": "What's New in Android"
              },
              {
                "id": 39677,
                "name": "Security"
              },
              {
                "id": 39678,
                "name": "Other (Please list in submission text)"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21051,
        "room": "Room 4",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "229920",
        "title": "DataStore Preferences and migrating from SharedPreferences",
        "description": "Is your app using SharedPreferneces heavily to store persistent data? What is the modern way to store data into shared persistence? What the heck is DataStore? Etc. Etc. \r\n\r\nWell, the talk will cover all the nitty gritty of modern android development with datastore and migration from the Android legacy SharedPreference API.",
        "startsAt": "2021-10-20T11:40:00",
        "endsAt": "2021-10-20T12:20:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "97220366-9ba4-4e7e-b78e-598d27cb639e",
            "name": "Hitesh Das"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39661,
                "name": "What's New in Android"
              },
              {
                "id": 39663,
                "name": "Jetpack / Architecture Components"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21052,
        "room": "Room 5",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "284671",
        "title": "Keeping your Pixels Perfect üì∏: Paparazzi 1.0",
        "description": "Unit tests allow you refactor your code with confidence and -- if architected correctly -- run blazingly fast!\r\n\r\nBut how do you ensure that your UI looks as expected? Espresso tests are hard to set up, prone to flakiness and require APKs, emulators, dexing, ADB...ugh. Snapshot tests get you closer but also rely on instrumentation tests.\r\n\r\nCome find out how we're improving the UI testing loop on Cash App with Paparazzi -- an Android testing library to render your application screens without a physical device or emulator!\r\n\r\nNote: this is an updated version of a talk I gave back in 2019 when Paparazzi was still in early development.",
        "startsAt": "2021-10-21T12:00:00",
        "endsAt": "2021-10-21T12:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "903c7a65-63f0-4244-8f8c-7ab8f7acae75",
            "name": "John Rodriguez"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39661,
                "name": "What's New in Android"
              },
              {
                "id": 39666,
                "name": "Testing"
              },
              {
                "id": 39670,
                "name": "UI/UX/Design"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21049,
        "room": "Room 2",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "245462",
        "title": "How to survive on Android and don't get killed",
        "description": "A cold-blooded war is raging on Android between ‚Äúwhat users can do with their devices‚Äù and ‚Äúhow much their device lasts on one charge‚Äù. Every new Android OS version is less merciful about your background processes. Different OEMs kill your apps straight away without asking if you do something useful for your users or not. New weapons of mass destruction are invented year by year. Their names? Doze mode V1!, Doze mode V2!, Background restrictions!, Adaptive battery! and more are coming this year whose evil names are yet to be known. But we can already imagine their devastating powers. \r\n\r\nSome OEMs are more cruel than others. The darkest warlords of them all? Samsung, Huawei, OnePlus and Xiaomi in that order. They employ elite trained assassins called task killers whose insidious ways are yet to be documented. \r\n\r\nIt seems impossible to survive, but there is hope! A small group of relentless developers (let‚Äôs call them the Resistance) did gather around a project dontkillmyapp.com. They have risen up against the evil hordes of kill -9. They have years of experience with long running processes and alarms on Android since the carefree times of Cupcake till the dawn of Pie. And they are here to share tips and guides with users and developers on how to survive in those dark times. Viva la Resistance! \r\n\r\nP.S. we have cookies and a guitar song at the end!",
        "startsAt": "2021-10-21T16:20:00",
        "endsAt": "2021-10-21T17:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "acc2c985-0086-4938-a627-7879ccff60b2",
            "name": "Petr Nalevka"
          },
          {
            "id": "67137704-969a-4a78-8583-0a8e8c0e514b",
            "name": "Ji≈ô√≠ Richter"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39661,
                "name": "What's New in Android"
              },
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39673,
                "name": "Core Skills"
              },
              {
                "id": 39678,
                "name": "Other (Please list in submission text)"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21048,
        "room": "Room 1",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "284083",
        "title": "A-Z of Kotlin Flow",
        "description": "In this session, the attendees with be learning about the benefits of Kotlin flow, what is flow, how can it be used, how can we migrate existing rx java code in our apps to kotlin coroutines and flow(with code walkthrough and demo of sample apps that involve network and database) and how can we unit test Kotlin flow.\r\nIn this session, we will have a live workshop, where the attendees will learn using Flow with MVVM Architecture & learn unit testing Kotlin flow code with runBlockingTest and TestCoroutineDispatcher & Turbine library.\r\n\r\nBy the end of this session, the attendees will be well-versed with using Kotlin flow in their apps.",
        "startsAt": "2021-10-22T11:00:00",
        "endsAt": "2021-10-22T12:20:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "7a957631-88e0-46c6-b0b3-a18f83c114ca",
            "name": "Monika Jethani"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39661,
                "name": "What's New in Android"
              },
              {
                "id": 39665,
                "name": "Advanced Kotlin"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21052,
        "room": "Room 5",
        "liveUrl": null,
        "recordingUrl": null
      }
    ]
  },
  {
    "groupId": 39662,
    "groupName": "Jetpack Compose",
    "sessions": [
      {
        "questionAnswers": [],
        "id": "251124",
        "title": "The journey of adopting Jetpack Compose in Babbel‚Äôs App",
        "description": "As the world‚Äôs first language learning app. A leader in the online language learning industry and ranked as the world‚Äôs #1 innovative company in education.\r\nIn Babbel engineering, we always thrive to provide not only the latest technology to serve our customers but also the latest technology that saves us time and enhances our product quality and performance.\r\nHence, we have always been early adopters of the newest tech that fits our needs. And Jetpack Compose is no different.\r\n\r\nIn this session, we will be sharing Our journey of adopting Compose into the Babbel App, the lessons learned, the ups and downs, the decisions we made and why we made them, and how to replicate that in your app. Basically, all and every takeaway from our journey starting from adopting the compose mindset all the way to how we integrated it with the already existing app architecture, design system and see what differences Compose has made to the Babbel app.\r\n\r\nThis isn‚Äôt a sci-fi or a fairytale, but let us take you on the real-world adventure that was integrating Compose into the Babbel app.",
        "startsAt": "2021-10-20T11:40:00",
        "endsAt": "2021-10-20T12:20:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "c3962084-3989-4f85-8ff8-86dd728f068c",
            "name": "Ahmed Mabrook"
          },
          {
            "id": "5f8860b3-e669-4717-91bf-ddceb872fd55",
            "name": "Benjamin Kadel"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39662,
                "name": "Jetpack Compose"
              },
              {
                "id": 39663,
                "name": "Jetpack / Architecture Components"
              },
              {
                "id": 39678,
                "name": "Other (Please list in submission text)"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21048,
        "room": "Room 1",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "283798",
        "title": "Building a Production-Ready Chat SDK Using Jetpack Compose",
        "description": "In this session, we'll talk about how we built the world's first Jetpack Compose Chat SDK, what challenges we met along the way and why put so much trust into a technology that only recently became stable.\r\n\r\nWe'll talk about the API design and what decisions we've made to allow for both default behaviour and UI and a rich set of customisation options.",
        "startsAt": "2021-10-20T13:20:00",
        "endsAt": "2021-10-20T14:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "c88da7b5-3d9b-4157-a34a-9fc8de74de00",
            "name": "Filip Babiƒá"
          },
          {
            "id": "1916ae1c-96d7-480f-9eed-bf5dce444441",
            "name": "M√°rton Braun"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39662,
                "name": "Jetpack Compose"
              },
              {
                "id": 39663,
                "name": "Jetpack / Architecture Components"
              },
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39670,
                "name": "UI/UX/Design"
              },
              {
                "id": 39674,
                "name": "Case Studies / Research"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21048,
        "room": "Room 1",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "279607",
        "title": "Kotlin Multiplatform Mobile in production: key takeaways from developing two cross-platform apps.",
        "description": "Kotlin Multiplatform Mobile is a young promising technology, but is it there to stay? And is it worth trying out? This talk is based on the experience of developing two very different cross-platform apps with KMM. The goal of this talk is to introduce KMM, discuss the pitfalls that a new KMM developer may encounter and share some valuable tips that were collected along the way of KMM development: from preferable app architecture to team requirements.",
        "startsAt": "2021-10-20T13:20:00",
        "endsAt": "2021-10-20T14:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "6a7c1f8a-784d-46be-8840-9cf519c4bc78",
            "name": "Lena Stepanova"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39662,
                "name": "Jetpack Compose"
              },
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              },
              {
                "id": 39674,
                "name": "Case Studies / Research"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21050,
        "room": "Room 3",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "271544",
        "title": "A Hitchhiker's Guide to Compose Compiler:  Composers, Compiler Plugins, and Snapshots",
        "description": "If you are an Android Developer, chances are you are pretty excited about Jetpack Compose! But how does it work? In this talk, we will take you along the journey of a Composable function, from being written, going through the unknown lands of the Kotlin and Compose compilers to being executed and displaying UI!  \r\n\r\nFrom Composables all the way down into the compiler plugins, we expose the metaprogramming responsible for all the \"magic\". Whether your interest is Jetpack Compose, compilers, or code transformations, this talk takes an otherwise complicated topic and makes it digestible for everybody by diving into specific features offered by Compose.\r\n\r\nBy examining Compose's snapshot system,  you'll follow the compiler phases down to intercepting code transformations with IR. By recognizing the patterns that make it hard for Compose to generate efficient code, and this can help us to recognize patterns to use for performance.",
        "startsAt": "2021-10-20T14:10:00",
        "endsAt": "2021-10-20T14:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "c03a7211-54ff-4819-9789-1a22ed91fafc",
            "name": "Jossi Wolf"
          },
          {
            "id": "a4d26fc1-9707-4c86-bc82-70b7ce05823c",
            "name": "Amanda Hinchman-Dominguez"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39662,
                "name": "Jetpack Compose"
              },
              {
                "id": 39665,
                "name": "Advanced Kotlin"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21048,
        "room": "Room 1",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "283346",
        "title": "Testing Jetpack Compose UI",
        "description": "Building UI with Jetpack Compose is different from using Views. So is testing. After implementing Compose UI in production code and writing test suites for it I decided to share my learnings to make UI testing easier for other developers.\r\n\r\nIn this session we will:\r\n- Determine how Compose layout is different from View-based UI\r\n- Speak about available UI testing tools\r\n- Learn how to test Compose layout\r\n- Discover Compose testing library\r\n- Discuss some common pitfalls",
        "startsAt": "2021-10-20T15:10:00",
        "endsAt": "2021-10-20T15:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "82508e77-1061-4969-8272-e7112eb754b7",
            "name": "Dmytro Shuba"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39662,
                "name": "Jetpack Compose"
              },
              {
                "id": 39666,
                "name": "Testing"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21048,
        "room": "Room 1",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "256259",
        "title": "Using GraphQL in a KMM project with Jetpack Compose and SwiftUI",
        "description": "In this talk John will show how GraphQL, using Apollo library, can be used in shared code in a Kotlin Multiplatform project with the UI developed using Jetpack Compose on Android and SwiftUI on iOS.\r\n\r\nThe talk will cover\r\n- use of Apollo GraphQL library and it's Kotlin Multiplatform support allowing addition of GraphQL queries and related logic in code shared between iOS and Android clients.\r\n- development of clients using Declarative UI frameworks (Jetpack Compose on Android and SwiftUI on iOS) ",
        "startsAt": "2021-10-20T15:10:00",
        "endsAt": "2021-10-20T15:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "0392772c-28d4-47f6-bd39-47d743fb4a81",
            "name": "John O'Reilly"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39662,
                "name": "Jetpack Compose"
              },
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21050,
        "room": "Room 3",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "283265",
        "title": "Refactoring UI",
        "description": "Jetpack Compose is here and comes with a paradigm shift in how we build Android apps. Over the years we have become accustomed to writing apps in a bottom-up approach, building core business components first and wiring the layers with the UI later. In this traditional approach the management and modeling of state, along with how it impacts the UI layers of our apps, are often an afterthought. \r\n\r\nWorking with Compose requires a fundamental shift in how we think about UI and its state. In this talk, we will migrate an existing app over to Jetpack compose. In the process, we will cover migrating state to a single source of truth, how to decompose a screen into smaller more flexible components and how to avoid common performance pitfalls in Compose that often go unnoticed.",
        "startsAt": "2021-10-21T09:00:00",
        "endsAt": "2021-10-21T09:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "22a0842d-51da-43e2-a5f2-b48893ae49f4",
            "name": "Joe Birch"
          },
          {
            "id": "0b7c8764-67b5-4bee-ad34-769973e0de32",
            "name": "Prateek Prasad"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39662,
                "name": "Jetpack Compose"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21052,
        "room": "Room 5",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "258631",
        "title": "Jetpack Compose for Games & Animations",
        "description": "Are you excited about Jetpack Compose? Do you love playing & making games? Have you got that designer itch which makes you want to develop creative apps? Or you love the motion design and micro-interactions? \r\n\r\nAlthough Jetpack Compose is a toolkit to create Android UI in a declarative form with the power of Kotlin language. But it can be used as a canvas for generative art, animations, or even games.\r\n\r\nIn this session, we'll take a look at the capabilities of Canvas API for Jetpack Compose and how can we implement different kinds of animations with it. We'll also dig into game development and discuss some common challenges like game loop, state management etc. We will also explore other UI animations and transitions with Jetpack Compose.\r\n\r\nBy the end of this talk, we'll be more familiar with the concepts of Canvas in Jetpack Compose and how we can use it during development to write animations or games.",
        "startsAt": "2021-10-21T09:50:00",
        "endsAt": "2021-10-21T10:30:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "b713e0ad-54b5-4704-addb-de594f72d7d8",
            "name": "Wajahat Karim"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39662,
                "name": "Jetpack Compose"
              },
              {
                "id": 39663,
                "name": "Jetpack / Architecture Components"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21048,
        "room": "Room 1",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "275960",
        "title": "A page out of Server driven UI on Android",
        "description": "This talk emphasises how and why building Android apps using a concept called Server Driven Architecture for our UI layer is so important and current hot-topic. \r\nWe take a look at multiple offerings such as JetPack Compose or Epoxy (Airbnb's library) and we then take a look at some tips and tricks to navigate the code from start to finish. ",
        "startsAt": "2021-10-21T11:10:00",
        "endsAt": "2021-10-21T11:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "ed42f118-131f-4ff0-b644-43ba706b82e8",
            "name": "Adit Lal"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39662,
                "name": "Jetpack Compose"
              },
              {
                "id": 39665,
                "name": "Advanced Kotlin"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21052,
        "room": "Room 5",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "261825",
        "title": "Life of a frame in Jetpack Compose",
        "description": "Jetpack Compose has 4 distinct phases: composition, measure, layout and drawing. In this session the speaker will go through each phase and demonstrate how they work together to deliver a powerful reactive UI framework. \r\n\r\nWe will go through a number of examples to explore where the boundaries of each phase lies, and show you how to write your own performant componentry. We'll then explore what subcomposition is, why it is useful, and how LazyColumn & friends work 'under the hood'.",
        "startsAt": "2021-10-21T11:10:00",
        "endsAt": "2021-10-21T11:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "fd699fd4-ca8a-4b16-a811-cfb7de9e9b1b",
            "name": "Chris Banes"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39662,
                "name": "Jetpack Compose"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21048,
        "room": "Room 1",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "283455",
        "title": "'Nitrogenize' your project with Mvvm, Compose, UTP - A killer combination for successful deliveries",
        "description": "Compose took on the table a new approach to developing in Android. Besides this great new framework, large portions of our apps won‚Äôt change at all, and Unidirectional Data Flow best practices should be used.\r\n\r\nWhat will change in our project? Which patterns should we adapt in our app to work with these new techs? Is my app ready to be migrated with Compose? Let's see how use this new declarative UI framework in an already structured and organised project maintaining its own design pattern architecture. \r\nWhat will be the advantages and disadvantages?\r\n\r\nUnified Test Platform (UTP), best known as project code Nitrogen, it's another fantastic tech presented this year at Google IO. Let's see together what it is, why is so useful and why we should adopt it in our app.\r\nWe will use this extensible test executor to 'nitrogenize' our UI test suite covering some UI cases in our project. Let's scale together our test suite with Gradle managed devices in parallel using new test metrics, and finally, inspecting test results and possible failures by emulator snapshots.\r\n\r\nAfter this talk, you will know if your app architecture is ready for Compose,  you will be ready to transform your test suite into a more reliable scalable and productive env and you will speed up the delivery and the code quality of your project.",
        "startsAt": "2021-10-21T11:10:00",
        "endsAt": "2021-10-21T11:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "b8e52efe-7709-4af8-8e97-cb07860b8e24",
            "name": "Enrico Bruno Del Zotto"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39662,
                "name": "Jetpack Compose"
              },
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39666,
                "name": "Testing"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21050,
        "room": "Room 3",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "261485",
        "title": "Building Accessible Apps with Jetpack Compose",
        "description": "Did you know that 15% of the worlds population experience some form of disability? Yet even with this high number, accessibility is often an after thought for many projects - meaning that many of the things we build end up creating barriers for users who utilise accessibility features. With tools like Jetpack Compose, there is reduced friction in supporting these things in our apps - we just need to have the knowledge of how to implement them.\r\n\r\nIn this talk we‚Äôll explore common accessibility pitfalls, along with how they can be tackled within Jetpack Compose. You‚Äôll leave with the confidence and knowledge to make your apps more accessible for everyone!",
        "startsAt": "2021-10-21T12:00:00",
        "endsAt": "2021-10-21T12:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "22a0842d-51da-43e2-a5f2-b48893ae49f4",
            "name": "Joe Birch"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39662,
                "name": "Jetpack Compose"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21052,
        "room": "Room 5",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "282350",
        "title": "Hosting our states in Compose",
        "description": "In this talk, we are gonna talk about the importance of State Hosting in Jetpack Compose as a clean way to keep our views updated! \r\nWe are gonna discuss, concepts that all developers should know with a little twist on Declarative UI with clear examples of how to do it in Jetpack compose. For example, encapsulation, single source of truth, and Decoupled composables!\r\nWe are also going to travel over functions like remember { } that allows you to remember the state even on recomposition. \r\nAll of these questions and ideas will be learn by easy examples! ",
        "startsAt": "2021-10-21T12:00:00",
        "endsAt": "2021-10-21T12:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "06b204ed-71d7-485f-8c1f-aa6790ac2451",
            "name": "Dinorah Tovar"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39662,
                "name": "Jetpack Compose"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21048,
        "room": "Room 1",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "283592",
        "title": "Building a books app with Jetpack Compose and Firebase",
        "description": "Having a successful Android app often means having a beautiful and modern UI + a solid and fail-safe backend. Gone are the days when this could only be achieved with the good old Android Studio's XML Layout Editor and a dedicated server. Nowadays Android Developers can build apps faster with declarative UIs and serverless backends.\r\n\r\nIn this workshop, Ros√°rio will be showing how to build an Android app with Jetpack Compose and Firebase to display a list of books and their information.\r\n\r\nSession breakdown:\r\n10min - Creating a Jetpack Compose Project\r\n20min - Creating Lists with Compose\r\n10min - Creating a Firebase Project and setting up Cloud Firestore\r\n10min - Displaying data from Cloud Firestore\r\n20min - Creating a Form with Compose\r\n10min - Sending form data to Cloud Firestore\r\n10min - Q&A",
        "startsAt": "2021-10-22T14:40:00",
        "endsAt": "2021-10-22T16:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "0c37eee0-b1b1-4db0-9668-68db5ea2c85b",
            "name": "Ros√°rio Pereira Fernandes"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39662,
                "name": "Jetpack Compose"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21052,
        "room": "Room 5",
        "liveUrl": null,
        "recordingUrl": null
      }
    ]
  },
  {
    "groupId": 39663,
    "groupName": "Jetpack / Architecture Components",
    "sessions": [
      {
        "questionAnswers": [],
        "id": "229920",
        "title": "DataStore Preferences and migrating from SharedPreferences",
        "description": "Is your app using SharedPreferneces heavily to store persistent data? What is the modern way to store data into shared persistence? What the heck is DataStore? Etc. Etc. \r\n\r\nWell, the talk will cover all the nitty gritty of modern android development with datastore and migration from the Android legacy SharedPreference API.",
        "startsAt": "2021-10-20T11:40:00",
        "endsAt": "2021-10-20T12:20:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "97220366-9ba4-4e7e-b78e-598d27cb639e",
            "name": "Hitesh Das"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39661,
                "name": "What's New in Android"
              },
              {
                "id": 39663,
                "name": "Jetpack / Architecture Components"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21052,
        "room": "Room 5",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "251124",
        "title": "The journey of adopting Jetpack Compose in Babbel‚Äôs App",
        "description": "As the world‚Äôs first language learning app. A leader in the online language learning industry and ranked as the world‚Äôs #1 innovative company in education.\r\nIn Babbel engineering, we always thrive to provide not only the latest technology to serve our customers but also the latest technology that saves us time and enhances our product quality and performance.\r\nHence, we have always been early adopters of the newest tech that fits our needs. And Jetpack Compose is no different.\r\n\r\nIn this session, we will be sharing Our journey of adopting Compose into the Babbel App, the lessons learned, the ups and downs, the decisions we made and why we made them, and how to replicate that in your app. Basically, all and every takeaway from our journey starting from adopting the compose mindset all the way to how we integrated it with the already existing app architecture, design system and see what differences Compose has made to the Babbel app.\r\n\r\nThis isn‚Äôt a sci-fi or a fairytale, but let us take you on the real-world adventure that was integrating Compose into the Babbel app.",
        "startsAt": "2021-10-20T11:40:00",
        "endsAt": "2021-10-20T12:20:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "c3962084-3989-4f85-8ff8-86dd728f068c",
            "name": "Ahmed Mabrook"
          },
          {
            "id": "5f8860b3-e669-4717-91bf-ddceb872fd55",
            "name": "Benjamin Kadel"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39662,
                "name": "Jetpack Compose"
              },
              {
                "id": 39663,
                "name": "Jetpack / Architecture Components"
              },
              {
                "id": 39678,
                "name": "Other (Please list in submission text)"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21048,
        "room": "Room 1",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "283798",
        "title": "Building a Production-Ready Chat SDK Using Jetpack Compose",
        "description": "In this session, we'll talk about how we built the world's first Jetpack Compose Chat SDK, what challenges we met along the way and why put so much trust into a technology that only recently became stable.\r\n\r\nWe'll talk about the API design and what decisions we've made to allow for both default behaviour and UI and a rich set of customisation options.",
        "startsAt": "2021-10-20T13:20:00",
        "endsAt": "2021-10-20T14:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "c88da7b5-3d9b-4157-a34a-9fc8de74de00",
            "name": "Filip Babiƒá"
          },
          {
            "id": "1916ae1c-96d7-480f-9eed-bf5dce444441",
            "name": "M√°rton Braun"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39662,
                "name": "Jetpack Compose"
              },
              {
                "id": 39663,
                "name": "Jetpack / Architecture Components"
              },
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39670,
                "name": "UI/UX/Design"
              },
              {
                "id": 39674,
                "name": "Case Studies / Research"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21048,
        "room": "Room 1",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "262888",
        "title": "Android Architecture Design with Koin",
        "description": "Koin (https://insert-koin.io) is a pragmatic dependency injection framework for Kotlin/Android developers, well known for its ease of use. In this session, I propose to see together how we can structure our components, for the following topics:\r\n* Classical Components in MVP, MVVM\r\n* Dealing with Scopes\r\n* Jetpack Navigation\r\n* Jetpack Compose\r\n* Integrating with Multi Platform\r\n\r\nAnd bonus, we will talk about incoming Annotation Processing tools.",
        "startsAt": "2021-10-20T14:10:00",
        "endsAt": "2021-10-20T14:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "66fbb80a-cd18-4ba1-931d-d070d060ab95",
            "name": "Arnaud Giuliani"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39663,
                "name": "Jetpack / Architecture Components"
              },
              {
                "id": 39664,
                "name": "Architecture"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21049,
        "room": "Room 2",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "283432",
        "title": "Introduction to dual-screen and foldables development",
        "description": "In this talk we will see what new form factor devices such as dual-screen and foldable devices are, and what they bring to the game. \r\nWe will see new dual-screen/foldable UI/UX design patterns, and we will learn about some of the existent fold-aware libraries, which will help us to create amazing new experiences for our users.",
        "startsAt": "2021-10-20T15:10:00",
        "endsAt": "2021-10-20T15:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "674a2237-30f1-4ec4-be9f-95cc4b7ab5ca",
            "name": "Cesar Valiente"
          },
          {
            "id": "5049f072-f326-4175-82d0-715e037a1d6d",
            "name": "Cristian Verdes"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39663,
                "name": "Jetpack / Architecture Components"
              },
              {
                "id": 39670,
                "name": "UI/UX/Design"
              },
              {
                "id": 39675,
                "name": "Open Source"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21051,
        "room": "Room 4",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "283450",
        "title": "\"Offline\" is not an error",
        "description": "Building an app that works is not enough. Our users will not wait patiently till we synchronize the data. They expect their app to be available all the time, right now, regardless of where they are. Yonatan will share lessons from building a fast, reliable, offline-first monday.com app that many global companies use daily. We will learn \"boom performance,\" what are the technics to achieve that, and how to build app architecture to support offline changes using a modern Jetpack stack and make our users happy.\r\nEDIT: some more details:\r\nIn this talk, I will share our journey of building a database to support a huge data set, utilizing dynamic queries but still enjoying all benefits that Room provides, how to integrate it with a two-level cache and pagination. Support reactive update UI using Kotlin Flow with any change and sync the change with the backend even if the device is offline. \r\n",
        "startsAt": "2021-10-21T09:50:00",
        "endsAt": "2021-10-21T10:30:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "fca38e15-1e28-4843-8300-bcfd2923328f",
            "name": "Yonatan (Yoni) Levin"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39663,
                "name": "Jetpack / Architecture Components"
              },
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39665,
                "name": "Advanced Kotlin"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21049,
        "room": "Room 2",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "258631",
        "title": "Jetpack Compose for Games & Animations",
        "description": "Are you excited about Jetpack Compose? Do you love playing & making games? Have you got that designer itch which makes you want to develop creative apps? Or you love the motion design and micro-interactions? \r\n\r\nAlthough Jetpack Compose is a toolkit to create Android UI in a declarative form with the power of Kotlin language. But it can be used as a canvas for generative art, animations, or even games.\r\n\r\nIn this session, we'll take a look at the capabilities of Canvas API for Jetpack Compose and how can we implement different kinds of animations with it. We'll also dig into game development and discuss some common challenges like game loop, state management etc. We will also explore other UI animations and transitions with Jetpack Compose.\r\n\r\nBy the end of this talk, we'll be more familiar with the concepts of Canvas in Jetpack Compose and how we can use it during development to write animations or games.",
        "startsAt": "2021-10-21T09:50:00",
        "endsAt": "2021-10-21T10:30:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "b713e0ad-54b5-4704-addb-de594f72d7d8",
            "name": "Wajahat Karim"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39662,
                "name": "Jetpack Compose"
              },
              {
                "id": 39663,
                "name": "Jetpack / Architecture Components"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21048,
        "room": "Room 1",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "283861",
        "title": "Rock-Solid UI and Instrumentation Testing",
        "description": "We Android developers use the \"flakiness\" word more than the \"stability\" word while talking about Espresso and Instrumentation tests. We cannot truly trust flaky tests. Instrumentation testing will continue to be part of our lives even with Jetpack Compose therefore, we need stability.\r\n\r\nRunning all UI tests before merging any code is possible, and it saves us a lot with 400+ integration tests. Unfortunately, stability is not something that comes out of the box. A certain level of architecture, proper thread usage, and test setup with helper rules are required. There is an uncountable number of things that affect UI tests. \r\n\r\nGood thing, there are explanations and solutions for most of the flakiness. In this talk, you will learn more about best practices to increase test stability, how to utilise Test-Driven Development with UI testing, and how this will help you find bugs earlier.\r\n",
        "startsAt": "2021-10-21T15:30:00",
        "endsAt": "2021-10-21T16:10:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "9a7f5add-ce7a-49a3-ab3d-f3c4484453e8",
            "name": "Sinan Kozak"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39663,
                "name": "Jetpack / Architecture Components"
              },
              {
                "id": 39666,
                "name": "Testing"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21049,
        "room": "Room 2",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "287436",
        "title": "Enhance your single screen designed-app to make it shine on foldable devices",
        "description": "In this workshop, we will take an app that has been built with just single screen device scenarios on mind, and we will enhance it to make it great on foldable devices too, so users will enjoy a great new experience on these new devices.\r\n\r\nYou will learn how Jetpack WindowManager works, and what is needed to adjust the UI of your apps, so they shine on foldable devices.",
        "startsAt": "2021-10-22T11:00:00",
        "endsAt": "2021-10-22T12:20:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "674a2237-30f1-4ec4-be9f-95cc4b7ab5ca",
            "name": "Cesar Valiente"
          },
          {
            "id": "5049f072-f326-4175-82d0-715e037a1d6d",
            "name": "Cristian Verdes"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39663,
                "name": "Jetpack / Architecture Components"
              },
              {
                "id": 39670,
                "name": "UI/UX/Design"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21051,
        "room": "Room 4",
        "liveUrl": null,
        "recordingUrl": null
      }
    ]
  },
  {
    "groupId": 39664,
    "groupName": "Architecture",
    "sessions": [
      {
        "questionAnswers": [],
        "id": "246566",
        "title": "Writing Apps for the Work Profile",
        "description": "Android‚Äôs Work Profile has been around since Lollipop & it‚Äôs a great way to separate your work and personal lives but having your app live in that work profile comes with some special considerations ‚Äì how does it get installed?  How does it get configured?  How will the employee‚Äôs administrator expect my app to behave?\r\n\r\nI have been working with Enterprise applications since the Work profile was first introduced and, in this talk, I will walk through how to create the best experience both for the end user and their device administrator.",
        "startsAt": "2021-10-20T11:10:00",
        "endsAt": "2021-10-20T11:30:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "ce06ea99-74e6-4d25-9da9-a5e5cac58bb6",
            "name": "Darryn Campbell"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39676,
                "name": "Enterprise"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21049,
        "room": "Room 2",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "269065",
        "title": "Everything is an API",
        "description": "When creating a new app module, or modularising an existing one, it becomes easy to forget who might be consuming it. It becomes easy to forget that every decision you make will affect how it is used, or in the worst case, abused. We're told that code should document itself, but how do these design decisions reflect in the understanding of intended use?\r\n\r\nJust because we might not be exposing a module as a public or open-sourced library, doesn't mean we can't benefit from making good decisions towards an effective and sensible API. By taking the stance that every piece of code we write is an API we can build more versatile and scalable applications.\r\n\r\nIn this talk, I'll discuss how you can apply best practices from the open-source world to your project, to guard implementations, provide concise and specific contracts, practical documentation mechanisms, and how doing so can aid (or harm) your build time.",
        "startsAt": "2021-10-20T11:40:00",
        "endsAt": "2021-10-20T12:20:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "10659767-356c-4cd5-ba9c-12cec7a3ce79",
            "name": "Ash Davies"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39665,
                "name": "Advanced Kotlin"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21049,
        "room": "Room 2",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "283798",
        "title": "Building a Production-Ready Chat SDK Using Jetpack Compose",
        "description": "In this session, we'll talk about how we built the world's first Jetpack Compose Chat SDK, what challenges we met along the way and why put so much trust into a technology that only recently became stable.\r\n\r\nWe'll talk about the API design and what decisions we've made to allow for both default behaviour and UI and a rich set of customisation options.",
        "startsAt": "2021-10-20T13:20:00",
        "endsAt": "2021-10-20T14:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "c88da7b5-3d9b-4157-a34a-9fc8de74de00",
            "name": "Filip Babiƒá"
          },
          {
            "id": "1916ae1c-96d7-480f-9eed-bf5dce444441",
            "name": "M√°rton Braun"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39662,
                "name": "Jetpack Compose"
              },
              {
                "id": 39663,
                "name": "Jetpack / Architecture Components"
              },
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39670,
                "name": "UI/UX/Design"
              },
              {
                "id": 39674,
                "name": "Case Studies / Research"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21048,
        "room": "Room 1",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "279607",
        "title": "Kotlin Multiplatform Mobile in production: key takeaways from developing two cross-platform apps.",
        "description": "Kotlin Multiplatform Mobile is a young promising technology, but is it there to stay? And is it worth trying out? This talk is based on the experience of developing two very different cross-platform apps with KMM. The goal of this talk is to introduce KMM, discuss the pitfalls that a new KMM developer may encounter and share some valuable tips that were collected along the way of KMM development: from preferable app architecture to team requirements.",
        "startsAt": "2021-10-20T13:20:00",
        "endsAt": "2021-10-20T14:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "6a7c1f8a-784d-46be-8840-9cf519c4bc78",
            "name": "Lena Stepanova"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39662,
                "name": "Jetpack Compose"
              },
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              },
              {
                "id": 39674,
                "name": "Case Studies / Research"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21050,
        "room": "Room 3",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "262888",
        "title": "Android Architecture Design with Koin",
        "description": "Koin (https://insert-koin.io) is a pragmatic dependency injection framework for Kotlin/Android developers, well known for its ease of use. In this session, I propose to see together how we can structure our components, for the following topics:\r\n* Classical Components in MVP, MVVM\r\n* Dealing with Scopes\r\n* Jetpack Navigation\r\n* Jetpack Compose\r\n* Integrating with Multi Platform\r\n\r\nAnd bonus, we will talk about incoming Annotation Processing tools.",
        "startsAt": "2021-10-20T14:10:00",
        "endsAt": "2021-10-20T14:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "66fbb80a-cd18-4ba1-931d-d070d060ab95",
            "name": "Arnaud Giuliani"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39663,
                "name": "Jetpack / Architecture Components"
              },
              {
                "id": 39664,
                "name": "Architecture"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21049,
        "room": "Room 2",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "283863",
        "title": "KMM story - from first feature to Mobile mono-repo at Sphere",
        "description": "We will share our thought process on the business case of a multiplatform core for mobile apps, and why it might not make sense in some cases. We will also share our experience in incremental transition in a 9-month timeframe alongside product development in parallel, and a high-level glimpse of the architecture.\r\n\r\nAppCore, our multi-platform framework:\r\n\r\nThe AppCore project powers the domain layer of both our Android and our iOS apps, and is enabled by Kotlin Multiplatform Mobile. It involves:\r\n\r\n- A database-first, unidirectional data flow architecture, Kotlin Coroutines and SQLDelight.\r\n- A strong emphasis on caching, synchronisation and persistence to facilitate the continuity and fluidity of our user experience.\r\n- Various backend integrations through Apollo GraphQL, Google Cloud Firestore and WebSocket.\r\n\r\n",
        "startsAt": "2021-10-20T14:10:00",
        "endsAt": "2021-10-20T14:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "3bd5e927-ef54-4335-9592-480c48c0ac35",
            "name": "Attila Blenesi"
          },
          {
            "id": "6c1e3dfb-e6e2-4263-9e3b-3d4e7e30fc25",
            "name": "Anders Ha"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39665,
                "name": "Advanced Kotlin"
              },
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              },
              {
                "id": 39671,
                "name": "Career & Leveling Up"
              },
              {
                "id": 39675,
                "name": "Open Source"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21050,
        "room": "Room 3",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "256259",
        "title": "Using GraphQL in a KMM project with Jetpack Compose and SwiftUI",
        "description": "In this talk John will show how GraphQL, using Apollo library, can be used in shared code in a Kotlin Multiplatform project with the UI developed using Jetpack Compose on Android and SwiftUI on iOS.\r\n\r\nThe talk will cover\r\n- use of Apollo GraphQL library and it's Kotlin Multiplatform support allowing addition of GraphQL queries and related logic in code shared between iOS and Android clients.\r\n- development of clients using Declarative UI frameworks (Jetpack Compose on Android and SwiftUI on iOS) ",
        "startsAt": "2021-10-20T15:10:00",
        "endsAt": "2021-10-20T15:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "0392772c-28d4-47f6-bd39-47d743fb4a81",
            "name": "John O'Reilly"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39662,
                "name": "Jetpack Compose"
              },
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21050,
        "room": "Room 3",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "282127",
        "title": "The definitive guide to Android library development",
        "description": "Android library/SDK development unfortunately is harder than it should be. This is caused by inferior tooling (Why do you need fat AAR?), missing documentation (What causes transitive dependency conflicts?), and different architecture considerations (Should you modularize your SDK?).\r\n\r\nHaving switched to full-time Android SDK development two years ago, I'm summarizing my lessons learned into a talk I wish would have existed when I got started.\r\n\r\n‚ö†Ô∏è This talk is aimed at anyone curious to level up their knowledge of the Android ecosystem, not just at beginning/seasoned SDK developers!",
        "startsAt": "2021-10-20T16:10:00",
        "endsAt": "2021-10-20T16:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "b3770b77-c9c8-454d-8b7a-045ca1d66b7b",
            "name": "Jeroen Mols"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39664,
                "name": "Architecture"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21050,
        "room": "Room 3",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "284727",
        "title": "How we engineered our design system",
        "description": "Our designers decided to use a design system.\r\nWhat is a design system? How can it help speed up the design and the development of a mobile application?\r\nWe have to align the entire application to that design system, build re-usable components which will speed the development time up without creating too many issues, avoiding code repetition and creating something that our designers can check and interact with before the features using the designs are shipped.\r\nA design system uses components, and that's where we started from. We decided to mimic the idea of `widgets` from Flutter. We had to engineer our system in a way that allowed us to create small enough (but not too atomic) components, re-usable, avoiding making them too big and complex (hard to read and understand, hard to refactor, etc..).\r\nThe decisions, how we made them (team effort - with all the suggestions, opinions and conversations we had to come to a solution) and how we are now using them to speed up the development of our app.\r\nWhat problem we faced, how we solved them, how this impacted our development speed and approach over the weeks (and how it will impact us in the future).",
        "startsAt": "2021-10-21T09:00:00",
        "endsAt": "2021-10-21T09:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "20f42a9e-5775-412c-8452-e5c00db447a1",
            "name": "Luca Nicoletti"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39665,
                "name": "Advanced Kotlin"
              },
              {
                "id": 39670,
                "name": "UI/UX/Design"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21050,
        "room": "Room 3",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "203064",
        "title": "Using Kotlin Flow in MVVM",
        "description": "LiveData was never designed to be a full-fledged reactive stream. Thread management with LiveData is very hard and making data transformation with transformation operators is very limited. Moreover, testing LiveData becomes very tricky and is likely to open for race conditions if you are using it with coroutines.\r\n\r\nLuckily, Kotlin Flow provides asynchronously computed values with the power of Coroutines. Making data transformations becomes very easy with Flow intermediate operators. Furthermore, StateFlow provides caching the current state just like LiveData. Since there is a back-pressure in Flow, unit testing is much simpler with handy Flow terminal operators.\r\n\r\nKotlin Flow is a very powerful reactive stream with its robust operators. Using Flow instead of LiveData makes it easier to handle data transformations and background processes. Finally, testing Flow is much safer and painless compared to LiveData.",
        "startsAt": "2021-10-21T09:00:00",
        "endsAt": "2021-10-21T09:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "5f7faf69-dd61-4ad6-b6d8-0173cae292d8",
            "name": "Fatih Giri≈ü"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39665,
                "name": "Advanced Kotlin"
              },
              {
                "id": 39666,
                "name": "Testing"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21049,
        "room": "Room 2",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "283450",
        "title": "\"Offline\" is not an error",
        "description": "Building an app that works is not enough. Our users will not wait patiently till we synchronize the data. They expect their app to be available all the time, right now, regardless of where they are. Yonatan will share lessons from building a fast, reliable, offline-first monday.com app that many global companies use daily. We will learn \"boom performance,\" what are the technics to achieve that, and how to build app architecture to support offline changes using a modern Jetpack stack and make our users happy.\r\nEDIT: some more details:\r\nIn this talk, I will share our journey of building a database to support a huge data set, utilizing dynamic queries but still enjoying all benefits that Room provides, how to integrate it with a two-level cache and pagination. Support reactive update UI using Kotlin Flow with any change and sync the change with the backend even if the device is offline. \r\n",
        "startsAt": "2021-10-21T09:50:00",
        "endsAt": "2021-10-21T10:30:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "fca38e15-1e28-4843-8300-bcfd2923328f",
            "name": "Yonatan (Yoni) Levin"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39663,
                "name": "Jetpack / Architecture Components"
              },
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39665,
                "name": "Advanced Kotlin"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21049,
        "room": "Room 2",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "284185",
        "title": "Clean up state handling with a state machine",
        "description": "As the TIER app grew bigger, to keep the code maintainable, we retrofitted a state machine for managing ride state in the app. In this talk I'll provide a brief overview of why and how we implemented it, the benefits it has brought, and the challenges we had to face introducing it.",
        "startsAt": "2021-10-21T10:40:00",
        "endsAt": "2021-10-21T11:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "5ccb76c1-5af2-410a-9502-2940d5db8722",
            "name": "Daniel Gergely"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39674,
                "name": "Case Studies / Research"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21051,
        "room": "Room 4",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "283455",
        "title": "'Nitrogenize' your project with Mvvm, Compose, UTP - A killer combination for successful deliveries",
        "description": "Compose took on the table a new approach to developing in Android. Besides this great new framework, large portions of our apps won‚Äôt change at all, and Unidirectional Data Flow best practices should be used.\r\n\r\nWhat will change in our project? Which patterns should we adapt in our app to work with these new techs? Is my app ready to be migrated with Compose? Let's see how use this new declarative UI framework in an already structured and organised project maintaining its own design pattern architecture. \r\nWhat will be the advantages and disadvantages?\r\n\r\nUnified Test Platform (UTP), best known as project code Nitrogen, it's another fantastic tech presented this year at Google IO. Let's see together what it is, why is so useful and why we should adopt it in our app.\r\nWe will use this extensible test executor to 'nitrogenize' our UI test suite covering some UI cases in our project. Let's scale together our test suite with Gradle managed devices in parallel using new test metrics, and finally, inspecting test results and possible failures by emulator snapshots.\r\n\r\nAfter this talk, you will know if your app architecture is ready for Compose,  you will be ready to transform your test suite into a more reliable scalable and productive env and you will speed up the delivery and the code quality of your project.",
        "startsAt": "2021-10-21T11:10:00",
        "endsAt": "2021-10-21T11:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "b8e52efe-7709-4af8-8e97-cb07860b8e24",
            "name": "Enrico Bruno Del Zotto"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39662,
                "name": "Jetpack Compose"
              },
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39666,
                "name": "Testing"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21050,
        "room": "Room 3",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "283944",
        "title": "Offline first Flutter applications",
        "description": "Even though the world is becoming more \"online\" every day, there are still a lot of parts of the world that we all suffer connectivity problems. And, as we all know, as good developers, we should not let that affect the users' experiences in our applications.\r\n\r\nThinking \"offline\" first is a concept that we all suffer to achieve. With our Superlist application, we did a couple of experiments about being offline first, giving a seamless experience to the users on mobile and Desktop. \r\n\r\nWith this talk, I will share our experience with thinking \"offline\" first. You will learn about, what Flutter offers for being \"offline\" first, how you can achieve a great experience for your users by architecting your app the correct way, and most importantly, you will learn what NOT to do. :) ",
        "startsAt": "2021-10-21T13:40:00",
        "endsAt": "2021-10-21T14:20:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "adadf66f-529c-48fd-ba12-94903187a216",
            "name": "Salih Guler"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              },
              {
                "id": 39673,
                "name": "Core Skills"
              },
              {
                "id": 39674,
                "name": "Case Studies / Research"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21050,
        "room": "Room 3",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "283586",
        "title": "Scaling App development at Zalando",
        "description": "Zalando has invested heavily in their mobile platforms over the past years. As a result, development teams have grown by leaps and bounds. Accommodating this level of contributions is posing some unique organizational challenges.\r\n\r\nIn this talk, we focus on the architectural quest to decouple a team‚Äôs day-to-day work from unrelated streams of changes. We present our efforts to restructure our app monolith into a modularized and extensible platform that enables long-term growth and allows for smooth and concurrent feature development.",
        "startsAt": "2021-10-21T13:40:00",
        "endsAt": "2021-10-21T14:20:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "f9694afb-3cfc-428f-b043-0092f6bdb652",
            "name": "Volker Leck"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39676,
                "name": "Enterprise"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21048,
        "room": "Room 1",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "245462",
        "title": "How to survive on Android and don't get killed",
        "description": "A cold-blooded war is raging on Android between ‚Äúwhat users can do with their devices‚Äù and ‚Äúhow much their device lasts on one charge‚Äù. Every new Android OS version is less merciful about your background processes. Different OEMs kill your apps straight away without asking if you do something useful for your users or not. New weapons of mass destruction are invented year by year. Their names? Doze mode V1!, Doze mode V2!, Background restrictions!, Adaptive battery! and more are coming this year whose evil names are yet to be known. But we can already imagine their devastating powers. \r\n\r\nSome OEMs are more cruel than others. The darkest warlords of them all? Samsung, Huawei, OnePlus and Xiaomi in that order. They employ elite trained assassins called task killers whose insidious ways are yet to be documented. \r\n\r\nIt seems impossible to survive, but there is hope! A small group of relentless developers (let‚Äôs call them the Resistance) did gather around a project dontkillmyapp.com. They have risen up against the evil hordes of kill -9. They have years of experience with long running processes and alarms on Android since the carefree times of Cupcake till the dawn of Pie. And they are here to share tips and guides with users and developers on how to survive in those dark times. Viva la Resistance! \r\n\r\nP.S. we have cookies and a guitar song at the end!",
        "startsAt": "2021-10-21T16:20:00",
        "endsAt": "2021-10-21T17:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "acc2c985-0086-4938-a627-7879ccff60b2",
            "name": "Petr Nalevka"
          },
          {
            "id": "67137704-969a-4a78-8583-0a8e8c0e514b",
            "name": "Ji≈ô√≠ Richter"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39661,
                "name": "What's New in Android"
              },
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39673,
                "name": "Core Skills"
              },
              {
                "id": 39678,
                "name": "Other (Please list in submission text)"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21048,
        "room": "Room 1",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "182024",
        "title": "Community Day Keynote: Android Trinity: Scala, Java, Kotlin... a dark destiny",
        "description": "Poor design decisions can have a big impact on the evolution of any codebase, thus leading to frustration and uncertainty.\r\nJoin me on this journey and let's explore together a bit of android history and a painful real case scenario: the story of an android codebase with three main characters, Scala, Java and Kotlin. \r\n\r\nHow they lived together, maintenance nightmares, feature development, architecture, challenges and a bunch of approaches that helped us kill this pain and create peace and harmony.",
        "startsAt": "2021-10-22T09:40:00",
        "endsAt": "2021-10-22T10:40:00",
        "isServiceSession": false,
        "isPlenumSession": true,
        "speakers": [
          {
            "id": "78a2d4e3-756a-4554-b21f-fc39106e384f",
            "name": "Fernando Cejas"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              },
              {
                "id": 39673,
                "name": "Core Skills"
              },
              {
                "id": 39675,
                "name": "Open Source"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21048,
        "room": "Room 1",
        "liveUrl": null,
        "recordingUrl": null
      }
    ]
  },
  {
    "groupId": 39665,
    "groupName": "Advanced Kotlin",
    "sessions": [
      {
        "questionAnswers": [],
        "id": "283924",
        "title": "Backend for Frontend ‚Äì The secret of a great mobile project",
        "description": "‚ÄúWe have API for web, you can reuse it‚Äù ‚Äì sounds familiar? You know this problem which we usually have with API which is not tailored for mobile apps.  A BFF address the needs of respective frontend frameworks, like desktop, browser, and mobile apps. One of the biggest appeals of BFF is it ensures seamless user interaction regardless of the platform the frontend application is running on. Ideally, the front-end team will be responsible for managing the BFF as well, and now we can do this with the support of Kotlin for Backend.\r\nDuring this presentation, we will discuss aspects of BFF and how we can implement it as a mobile team.",
        "startsAt": "2021-10-20T11:10:00",
        "endsAt": "2021-10-20T11:30:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "29a51040-4b00-4576-b414-d585ea005057",
            "name": "Michal Szczepanik"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39665,
                "name": "Advanced Kotlin"
              },
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              },
              {
                "id": 39673,
                "name": "Core Skills"
              },
              {
                "id": 39676,
                "name": "Enterprise"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21050,
        "room": "Room 3",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "269065",
        "title": "Everything is an API",
        "description": "When creating a new app module, or modularising an existing one, it becomes easy to forget who might be consuming it. It becomes easy to forget that every decision you make will affect how it is used, or in the worst case, abused. We're told that code should document itself, but how do these design decisions reflect in the understanding of intended use?\r\n\r\nJust because we might not be exposing a module as a public or open-sourced library, doesn't mean we can't benefit from making good decisions towards an effective and sensible API. By taking the stance that every piece of code we write is an API we can build more versatile and scalable applications.\r\n\r\nIn this talk, I'll discuss how you can apply best practices from the open-source world to your project, to guard implementations, provide concise and specific contracts, practical documentation mechanisms, and how doing so can aid (or harm) your build time.",
        "startsAt": "2021-10-20T11:40:00",
        "endsAt": "2021-10-20T12:20:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "10659767-356c-4cd5-ba9c-12cec7a3ce79",
            "name": "Ash Davies"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39665,
                "name": "Advanced Kotlin"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21049,
        "room": "Room 2",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "271544",
        "title": "A Hitchhiker's Guide to Compose Compiler:  Composers, Compiler Plugins, and Snapshots",
        "description": "If you are an Android Developer, chances are you are pretty excited about Jetpack Compose! But how does it work? In this talk, we will take you along the journey of a Composable function, from being written, going through the unknown lands of the Kotlin and Compose compilers to being executed and displaying UI!  \r\n\r\nFrom Composables all the way down into the compiler plugins, we expose the metaprogramming responsible for all the \"magic\". Whether your interest is Jetpack Compose, compilers, or code transformations, this talk takes an otherwise complicated topic and makes it digestible for everybody by diving into specific features offered by Compose.\r\n\r\nBy examining Compose's snapshot system,  you'll follow the compiler phases down to intercepting code transformations with IR. By recognizing the patterns that make it hard for Compose to generate efficient code, and this can help us to recognize patterns to use for performance.",
        "startsAt": "2021-10-20T14:10:00",
        "endsAt": "2021-10-20T14:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "c03a7211-54ff-4819-9789-1a22ed91fafc",
            "name": "Jossi Wolf"
          },
          {
            "id": "a4d26fc1-9707-4c86-bc82-70b7ce05823c",
            "name": "Amanda Hinchman-Dominguez"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39662,
                "name": "Jetpack Compose"
              },
              {
                "id": 39665,
                "name": "Advanced Kotlin"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21048,
        "room": "Room 1",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "283863",
        "title": "KMM story - from first feature to Mobile mono-repo at Sphere",
        "description": "We will share our thought process on the business case of a multiplatform core for mobile apps, and why it might not make sense in some cases. We will also share our experience in incremental transition in a 9-month timeframe alongside product development in parallel, and a high-level glimpse of the architecture.\r\n\r\nAppCore, our multi-platform framework:\r\n\r\nThe AppCore project powers the domain layer of both our Android and our iOS apps, and is enabled by Kotlin Multiplatform Mobile. It involves:\r\n\r\n- A database-first, unidirectional data flow architecture, Kotlin Coroutines and SQLDelight.\r\n- A strong emphasis on caching, synchronisation and persistence to facilitate the continuity and fluidity of our user experience.\r\n- Various backend integrations through Apollo GraphQL, Google Cloud Firestore and WebSocket.\r\n\r\n",
        "startsAt": "2021-10-20T14:10:00",
        "endsAt": "2021-10-20T14:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "3bd5e927-ef54-4335-9592-480c48c0ac35",
            "name": "Attila Blenesi"
          },
          {
            "id": "6c1e3dfb-e6e2-4263-9e3b-3d4e7e30fc25",
            "name": "Anders Ha"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39665,
                "name": "Advanced Kotlin"
              },
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              },
              {
                "id": 39671,
                "name": "Career & Leveling Up"
              },
              {
                "id": 39675,
                "name": "Open Source"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21050,
        "room": "Room 3",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "283812",
        "title": "Backend Engineering for Android Developers",
        "description": "With Kotlin growing in popularity, it's about time we start looking at Kotlin as a language that has superpowers.\r\n When we talk about backend technologies, we have a lot of languages/frameworks like Go, Java, Python, etc.\r\nBut when we talk about Kotlin as a backend language, it might raise a lot of eyebrows\r\nBut let me try to convince you that Kotlin is definitely a good choice for Backend! We will talk about Ktor (A framework for Kotlin) to build a fast backend that can be re-used on your client side.\r\n\r\nWe will cover,\r\n1. Setup Backend\r\n2. Basics\r\n3. Power of coroutines\r\n4. Architecture of Ktor\r\n5. Production grade requirement\r\n6. Testing\r\n7. Deployment",
        "startsAt": "2021-10-20T16:10:00",
        "endsAt": "2021-10-20T16:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "57f666e2-409c-4998-8ce1-bb98e5d6b82f",
            "name": "Himanshu Singh"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39665,
                "name": "Advanced Kotlin"
              },
              {
                "id": 39666,
                "name": "Testing"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21049,
        "room": "Room 2",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "284727",
        "title": "How we engineered our design system",
        "description": "Our designers decided to use a design system.\r\nWhat is a design system? How can it help speed up the design and the development of a mobile application?\r\nWe have to align the entire application to that design system, build re-usable components which will speed the development time up without creating too many issues, avoiding code repetition and creating something that our designers can check and interact with before the features using the designs are shipped.\r\nA design system uses components, and that's where we started from. We decided to mimic the idea of `widgets` from Flutter. We had to engineer our system in a way that allowed us to create small enough (but not too atomic) components, re-usable, avoiding making them too big and complex (hard to read and understand, hard to refactor, etc..).\r\nThe decisions, how we made them (team effort - with all the suggestions, opinions and conversations we had to come to a solution) and how we are now using them to speed up the development of our app.\r\nWhat problem we faced, how we solved them, how this impacted our development speed and approach over the weeks (and how it will impact us in the future).",
        "startsAt": "2021-10-21T09:00:00",
        "endsAt": "2021-10-21T09:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "20f42a9e-5775-412c-8452-e5c00db447a1",
            "name": "Luca Nicoletti"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39665,
                "name": "Advanced Kotlin"
              },
              {
                "id": 39670,
                "name": "UI/UX/Design"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21050,
        "room": "Room 3",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "203064",
        "title": "Using Kotlin Flow in MVVM",
        "description": "LiveData was never designed to be a full-fledged reactive stream. Thread management with LiveData is very hard and making data transformation with transformation operators is very limited. Moreover, testing LiveData becomes very tricky and is likely to open for race conditions if you are using it with coroutines.\r\n\r\nLuckily, Kotlin Flow provides asynchronously computed values with the power of Coroutines. Making data transformations becomes very easy with Flow intermediate operators. Furthermore, StateFlow provides caching the current state just like LiveData. Since there is a back-pressure in Flow, unit testing is much simpler with handy Flow terminal operators.\r\n\r\nKotlin Flow is a very powerful reactive stream with its robust operators. Using Flow instead of LiveData makes it easier to handle data transformations and background processes. Finally, testing Flow is much safer and painless compared to LiveData.",
        "startsAt": "2021-10-21T09:00:00",
        "endsAt": "2021-10-21T09:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "5f7faf69-dd61-4ad6-b6d8-0173cae292d8",
            "name": "Fatih Giri≈ü"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39665,
                "name": "Advanced Kotlin"
              },
              {
                "id": 39666,
                "name": "Testing"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21049,
        "room": "Room 2",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "283450",
        "title": "\"Offline\" is not an error",
        "description": "Building an app that works is not enough. Our users will not wait patiently till we synchronize the data. They expect their app to be available all the time, right now, regardless of where they are. Yonatan will share lessons from building a fast, reliable, offline-first monday.com app that many global companies use daily. We will learn \"boom performance,\" what are the technics to achieve that, and how to build app architecture to support offline changes using a modern Jetpack stack and make our users happy.\r\nEDIT: some more details:\r\nIn this talk, I will share our journey of building a database to support a huge data set, utilizing dynamic queries but still enjoying all benefits that Room provides, how to integrate it with a two-level cache and pagination. Support reactive update UI using Kotlin Flow with any change and sync the change with the backend even if the device is offline. \r\n",
        "startsAt": "2021-10-21T09:50:00",
        "endsAt": "2021-10-21T10:30:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "fca38e15-1e28-4843-8300-bcfd2923328f",
            "name": "Yonatan (Yoni) Levin"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39663,
                "name": "Jetpack / Architecture Components"
              },
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39665,
                "name": "Advanced Kotlin"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21049,
        "room": "Room 2",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "258839",
        "title": "TDD in Android with Spek",
        "description": "Most developers (who writes test cases, but doesn't yet follow TDD) are interested in or willing to follow TDD, the only factor stopping them from following TDD is confusion.\r\nIn this session, I'll try to remove that confusion, so that developers can follow TDD without hesitation.\r\nI'll be talking about following TDD, what should be the process, and how exactly should you approach TDD. While discussing on TDD, I'll also be discussing on writing test cases with Spek DSL and the different styles of DSL offered by Spek. I'll also be showing how to setup Spek.\r\nWe'll be writing a feature, following TDD and coding live in the session.\r\nSpek being a DSL is descriptive way of writing rest cases, thus making them more readable and better organized, which will help further to understand TDD.\r\nMoreover, if you're new in android-dev, but have prior experience in web, you'll find Spek more familiar than traditional JUnit4 unit testing.",
        "startsAt": "2021-10-21T09:50:00",
        "endsAt": "2021-10-21T10:30:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "f5c5d07c-9ec9-4533-b50f-0b03493041d1",
            "name": "Rivu Chakraborty"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39665,
                "name": "Advanced Kotlin"
              },
              {
                "id": 39666,
                "name": "Testing"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21052,
        "room": "Room 5",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "275960",
        "title": "A page out of Server driven UI on Android",
        "description": "This talk emphasises how and why building Android apps using a concept called Server Driven Architecture for our UI layer is so important and current hot-topic. \r\nWe take a look at multiple offerings such as JetPack Compose or Epoxy (Airbnb's library) and we then take a look at some tips and tricks to navigate the code from start to finish. ",
        "startsAt": "2021-10-21T11:10:00",
        "endsAt": "2021-10-21T11:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "ed42f118-131f-4ff0-b644-43ba706b82e8",
            "name": "Adit Lal"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39662,
                "name": "Jetpack Compose"
              },
              {
                "id": 39665,
                "name": "Advanced Kotlin"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21052,
        "room": "Room 5",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "282988",
        "title": "Your own @Annotation processor.",
        "description": "\"Annotations. A beautiful creation that makes our life easier. We are using them for injection, serialization, and many other difficult things. But how do they work and what is responsible for doing magic for us? These are the questions that we will try to answer! We are gonna walk through the world of annotations and their processors to see how code generation makes our development more robust and how to create one by ourselves.\"\r\n\r\nAt this presentation, you will learn what are annotations, why are they so useful, and how to take benefit from them. Also, I will guide you through the world of annotation processing describing it and explaining how powerful it can be. Finally, having all this new knowledge we will create our simple annotation processor completely by ourselves!",
        "startsAt": "2021-10-21T15:30:00",
        "endsAt": "2021-10-21T16:10:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "ff832cdc-3ece-4d24-8be7-7c9ce5e4cee4",
            "name": "Gabriel Samoj≈Ço"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39665,
                "name": "Advanced Kotlin"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21048,
        "room": "Room 1",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "284083",
        "title": "A-Z of Kotlin Flow",
        "description": "In this session, the attendees with be learning about the benefits of Kotlin flow, what is flow, how can it be used, how can we migrate existing rx java code in our apps to kotlin coroutines and flow(with code walkthrough and demo of sample apps that involve network and database) and how can we unit test Kotlin flow.\r\nIn this session, we will have a live workshop, where the attendees will learn using Flow with MVVM Architecture & learn unit testing Kotlin flow code with runBlockingTest and TestCoroutineDispatcher & Turbine library.\r\n\r\nBy the end of this session, the attendees will be well-versed with using Kotlin flow in their apps.",
        "startsAt": "2021-10-22T11:00:00",
        "endsAt": "2021-10-22T12:20:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "7a957631-88e0-46c6-b0b3-a18f83c114ca",
            "name": "Monika Jethani"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39661,
                "name": "What's New in Android"
              },
              {
                "id": 39665,
                "name": "Advanced Kotlin"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21052,
        "room": "Room 5",
        "liveUrl": null,
        "recordingUrl": null
      }
    ]
  },
  {
    "groupId": 39666,
    "groupName": "Testing",
    "sessions": [
      {
        "questionAnswers": [],
        "id": "273169",
        "title": "Testing your React Native App - The Cypress way",
        "description": "Testing \r\nIn this talk, I will give a brief and beginner-friendly\r\n- introduction on what exactly is Cypress\r\n- explain the Cypress Test Runner\r\n- how to write your first test\r\n- explain how this has changed the way I test by giving real-life production examples\r\n\r\nYou will walk away with knowledge about what is Cypress and how you can use them in your React Native projects",
        "startsAt": "2021-10-20T11:10:00",
        "endsAt": "2021-10-20T11:30:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "abce342f-5df9-4251-86a5-15bf7025f3a8",
            "name": "Janhavi Dahihande"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39666,
                "name": "Testing"
              },
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21052,
        "room": "Room 5",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "283483",
        "title": "Idiomatic Kotlin in Tests",
        "description": "Unit tests are boring and maintaining them is complex? Sometimes. But it doesn't have to be this way. \r\n\r\nTo create great readable tests with ease we have to go further than standard Java tooling. To achieve that we can incorporate idiomatic Kotlin into test code. It will help us design tests to be both developer and machine friendly.\r\n\r\nDuring the talk we will refactor step-by-step Java with JUnit test to Kotlin with Kotest. We will look at differences between various tools and we will check how test tech stack choices are influencing developer productivity.\r\n\r\nI will show practical application of Kotlin idioms in test, including, but not limited to, assertions, mocking and test suite definition.",
        "startsAt": "2021-10-20T15:10:00",
        "endsAt": "2021-10-20T15:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "7490661a-e9f5-4c3c-afe7-fc004cd0aebb",
            "name": "Jaros≈Çaw Michalik"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39666,
                "name": "Testing"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21049,
        "room": "Room 2",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "283346",
        "title": "Testing Jetpack Compose UI",
        "description": "Building UI with Jetpack Compose is different from using Views. So is testing. After implementing Compose UI in production code and writing test suites for it I decided to share my learnings to make UI testing easier for other developers.\r\n\r\nIn this session we will:\r\n- Determine how Compose layout is different from View-based UI\r\n- Speak about available UI testing tools\r\n- Learn how to test Compose layout\r\n- Discover Compose testing library\r\n- Discuss some common pitfalls",
        "startsAt": "2021-10-20T15:10:00",
        "endsAt": "2021-10-20T15:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "82508e77-1061-4969-8272-e7112eb754b7",
            "name": "Dmytro Shuba"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39662,
                "name": "Jetpack Compose"
              },
              {
                "id": 39666,
                "name": "Testing"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21048,
        "room": "Room 1",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "283812",
        "title": "Backend Engineering for Android Developers",
        "description": "With Kotlin growing in popularity, it's about time we start looking at Kotlin as a language that has superpowers.\r\n When we talk about backend technologies, we have a lot of languages/frameworks like Go, Java, Python, etc.\r\nBut when we talk about Kotlin as a backend language, it might raise a lot of eyebrows\r\nBut let me try to convince you that Kotlin is definitely a good choice for Backend! We will talk about Ktor (A framework for Kotlin) to build a fast backend that can be re-used on your client side.\r\n\r\nWe will cover,\r\n1. Setup Backend\r\n2. Basics\r\n3. Power of coroutines\r\n4. Architecture of Ktor\r\n5. Production grade requirement\r\n6. Testing\r\n7. Deployment",
        "startsAt": "2021-10-20T16:10:00",
        "endsAt": "2021-10-20T16:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "57f666e2-409c-4998-8ce1-bb98e5d6b82f",
            "name": "Himanshu Singh"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39665,
                "name": "Advanced Kotlin"
              },
              {
                "id": 39666,
                "name": "Testing"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21049,
        "room": "Room 2",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "259203",
        "title": "Crashing is good for your App",
        "description": "As Android devs, we are usually too afraid of the crash. We go way too far to avoid crashing.\r\n\r\nSometimes our motto is no Crash at all costs.\r\n\r\nWrapping all of our java objects in double null checks, Elvis (?:) operators everywhere, absolutely no double bang (!!), \"try-catch\" everything.\r\n\r\nThese are just a few samples of what we do to avoid that innocent crash.\r\n\r\nI'm here to tell you to stop.\r\nWe should let our crashes happen. I'll tell you they are useful and helps us build better and safer apps.\r\nRemoving all of them does not help our apps or users.\r\n\r\nI explain Why it's bad to stop crashing at all costs.\r\nAlso cover how, where, and why we should throw to make the most out of them.\r\n\r\nLet's crash!!!",
        "startsAt": "2021-10-20T17:00:00",
        "endsAt": "2021-10-20T17:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "a9b18d70-903d-4990-9377-95048497d702",
            "name": "Seyed Jafari"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39666,
                "name": "Testing"
              },
              {
                "id": 39672,
                "name": "Skill Focused Talk"
              },
              {
                "id": 39673,
                "name": "Core Skills"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21052,
        "room": "Room 5",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "203064",
        "title": "Using Kotlin Flow in MVVM",
        "description": "LiveData was never designed to be a full-fledged reactive stream. Thread management with LiveData is very hard and making data transformation with transformation operators is very limited. Moreover, testing LiveData becomes very tricky and is likely to open for race conditions if you are using it with coroutines.\r\n\r\nLuckily, Kotlin Flow provides asynchronously computed values with the power of Coroutines. Making data transformations becomes very easy with Flow intermediate operators. Furthermore, StateFlow provides caching the current state just like LiveData. Since there is a back-pressure in Flow, unit testing is much simpler with handy Flow terminal operators.\r\n\r\nKotlin Flow is a very powerful reactive stream with its robust operators. Using Flow instead of LiveData makes it easier to handle data transformations and background processes. Finally, testing Flow is much safer and painless compared to LiveData.",
        "startsAt": "2021-10-21T09:00:00",
        "endsAt": "2021-10-21T09:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "5f7faf69-dd61-4ad6-b6d8-0173cae292d8",
            "name": "Fatih Giri≈ü"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39665,
                "name": "Advanced Kotlin"
              },
              {
                "id": 39666,
                "name": "Testing"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21049,
        "room": "Room 2",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "258839",
        "title": "TDD in Android with Spek",
        "description": "Most developers (who writes test cases, but doesn't yet follow TDD) are interested in or willing to follow TDD, the only factor stopping them from following TDD is confusion.\r\nIn this session, I'll try to remove that confusion, so that developers can follow TDD without hesitation.\r\nI'll be talking about following TDD, what should be the process, and how exactly should you approach TDD. While discussing on TDD, I'll also be discussing on writing test cases with Spek DSL and the different styles of DSL offered by Spek. I'll also be showing how to setup Spek.\r\nWe'll be writing a feature, following TDD and coding live in the session.\r\nSpek being a DSL is descriptive way of writing rest cases, thus making them more readable and better organized, which will help further to understand TDD.\r\nMoreover, if you're new in android-dev, but have prior experience in web, you'll find Spek more familiar than traditional JUnit4 unit testing.",
        "startsAt": "2021-10-21T09:50:00",
        "endsAt": "2021-10-21T10:30:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "f5c5d07c-9ec9-4533-b50f-0b03493041d1",
            "name": "Rivu Chakraborty"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39665,
                "name": "Advanced Kotlin"
              },
              {
                "id": 39666,
                "name": "Testing"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21052,
        "room": "Room 5",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "283455",
        "title": "'Nitrogenize' your project with Mvvm, Compose, UTP - A killer combination for successful deliveries",
        "description": "Compose took on the table a new approach to developing in Android. Besides this great new framework, large portions of our apps won‚Äôt change at all, and Unidirectional Data Flow best practices should be used.\r\n\r\nWhat will change in our project? Which patterns should we adapt in our app to work with these new techs? Is my app ready to be migrated with Compose? Let's see how use this new declarative UI framework in an already structured and organised project maintaining its own design pattern architecture. \r\nWhat will be the advantages and disadvantages?\r\n\r\nUnified Test Platform (UTP), best known as project code Nitrogen, it's another fantastic tech presented this year at Google IO. Let's see together what it is, why is so useful and why we should adopt it in our app.\r\nWe will use this extensible test executor to 'nitrogenize' our UI test suite covering some UI cases in our project. Let's scale together our test suite with Gradle managed devices in parallel using new test metrics, and finally, inspecting test results and possible failures by emulator snapshots.\r\n\r\nAfter this talk, you will know if your app architecture is ready for Compose,  you will be ready to transform your test suite into a more reliable scalable and productive env and you will speed up the delivery and the code quality of your project.",
        "startsAt": "2021-10-21T11:10:00",
        "endsAt": "2021-10-21T11:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "b8e52efe-7709-4af8-8e97-cb07860b8e24",
            "name": "Enrico Bruno Del Zotto"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39662,
                "name": "Jetpack Compose"
              },
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39666,
                "name": "Testing"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21050,
        "room": "Room 3",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "262864",
        "title": "Practical tips for succeeding with CI/CD for Android",
        "description": "Android teams often have to build and maintain their own CI/CD pipelines. This at first seems straightforward to implement and maintain. Yet it can often quickly become a tedious time sink and a source of universal frustration on many teams. \r\nFrom flaky builds, to long running builds, to flaky long running builds, the sources of frustration are endless. With the goal to ship more and faster as well as to compete in an ever changing industry, we can (and must) do better. \r\n\r\nThis talk will cover best practices for performance, stability, security, and maintainability of CI/CD pipelines with a focus on developing for Android, each supported with practical examples and counterexamples.\r\n",
        "startsAt": "2021-10-21T11:10:00",
        "endsAt": "2021-10-21T11:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "56eefe06-593b-4455-94dc-e3422fc4f81e",
            "name": "Zan Markan"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39666,
                "name": "Testing"
              },
              {
                "id": 39677,
                "name": "Security"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21049,
        "room": "Room 2",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "284671",
        "title": "Keeping your Pixels Perfect üì∏: Paparazzi 1.0",
        "description": "Unit tests allow you refactor your code with confidence and -- if architected correctly -- run blazingly fast!\r\n\r\nBut how do you ensure that your UI looks as expected? Espresso tests are hard to set up, prone to flakiness and require APKs, emulators, dexing, ADB...ugh. Snapshot tests get you closer but also rely on instrumentation tests.\r\n\r\nCome find out how we're improving the UI testing loop on Cash App with Paparazzi -- an Android testing library to render your application screens without a physical device or emulator!\r\n\r\nNote: this is an updated version of a talk I gave back in 2019 when Paparazzi was still in early development.",
        "startsAt": "2021-10-21T12:00:00",
        "endsAt": "2021-10-21T12:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "903c7a65-63f0-4244-8f8c-7ab8f7acae75",
            "name": "John Rodriguez"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39661,
                "name": "What's New in Android"
              },
              {
                "id": 39666,
                "name": "Testing"
              },
              {
                "id": 39670,
                "name": "UI/UX/Design"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21049,
        "room": "Room 2",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "185908",
        "title": "The Importance of Being Tested",
        "description": "We all know and agree that testing is important, but it‚Äôs not always the easiest thing to do, especially on Android. Managing Views, Lifecycles, Networks, and basically everything else, can be an excruciating pain. Also, it‚Äôs not always straight forward to let the rest of team aware of why we should be testing in the first place. But fear not! We will walk together through this journey, starting from the very basics on how to test, with ready to use snippets for common situations, small refactoring and creative ideas to be more certain about the code you ship. Hurry up, it‚Äôs time to sail the sea of testing!",
        "startsAt": "2021-10-21T13:40:00",
        "endsAt": "2021-10-21T14:20:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "7d912e80-f02c-42cf-92db-98e670bef1a6",
            "name": "Roberto Orgiu"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39666,
                "name": "Testing"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21049,
        "room": "Room 2",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "282907",
        "title": "An Introduction to Effective Snapshot Testing on Android",
        "description": "UI tests are a powerful tool to detect regression bugs. However, they are tedious to write and run very slow. But they are not the only tool we got to test the UI:\r\nsnapshot tests are some specific type of UI tests, that are not only easier to write but also run much faster than standard UI tests. They even help detect visual regression bugs that Espresso/UiAutomator tests cannot. Indeed, they are more widely used than UI tests by big companies such as Airbnb, with ‚âà 30.000 snapshot tests, and Uber, with thousand of snapshot tests vs. a handful of UI tests, among others.\r\n\r\nWhile there are plenty of resources about writing UI tests on Android, the same doesn't exist for snapshot tests. There is no guidance.\r\n\r\nSo, what is actually snapshot testing? how do you write a valuable snapshot test? what are the best practices? what are the pitfalls you have to take into account?\r\n\r\nIf you want to know how to get the most out of snapshot testing, come and join this tech talk. You will learn:\r\n- what is snapshot testing and how your app can benefit from it\r\n- how to decide what to snapshot test\r\n- how to write your first meaningful snapshot test\r\n- tips and tricks for better snapshot testing and what pitfalls to avoid\u2028",
        "startsAt": "2021-10-21T14:30:00",
        "endsAt": "2021-10-21T15:10:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "555e9890-5c73-4ac2-af0f-22a6df25e636",
            "name": "Sergio Sastre Fl√≥rez"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39666,
                "name": "Testing"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21049,
        "room": "Room 2",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "283861",
        "title": "Rock-Solid UI and Instrumentation Testing",
        "description": "We Android developers use the \"flakiness\" word more than the \"stability\" word while talking about Espresso and Instrumentation tests. We cannot truly trust flaky tests. Instrumentation testing will continue to be part of our lives even with Jetpack Compose therefore, we need stability.\r\n\r\nRunning all UI tests before merging any code is possible, and it saves us a lot with 400+ integration tests. Unfortunately, stability is not something that comes out of the box. A certain level of architecture, proper thread usage, and test setup with helper rules are required. There is an uncountable number of things that affect UI tests. \r\n\r\nGood thing, there are explanations and solutions for most of the flakiness. In this talk, you will learn more about best practices to increase test stability, how to utilise Test-Driven Development with UI testing, and how this will help you find bugs earlier.\r\n",
        "startsAt": "2021-10-21T15:30:00",
        "endsAt": "2021-10-21T16:10:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "9a7f5add-ce7a-49a3-ab3d-f3c4484453e8",
            "name": "Sinan Kozak"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39663,
                "name": "Jetpack / Architecture Components"
              },
              {
                "id": 39666,
                "name": "Testing"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21049,
        "room": "Room 2",
        "liveUrl": null,
        "recordingUrl": null
      }
    ]
  },
  {
    "groupId": 39668,
    "groupName": "Cross/Multi-Platform Development",
    "sessions": [
      {
        "questionAnswers": [],
        "id": "283924",
        "title": "Backend for Frontend ‚Äì The secret of a great mobile project",
        "description": "‚ÄúWe have API for web, you can reuse it‚Äù ‚Äì sounds familiar? You know this problem which we usually have with API which is not tailored for mobile apps.  A BFF address the needs of respective frontend frameworks, like desktop, browser, and mobile apps. One of the biggest appeals of BFF is it ensures seamless user interaction regardless of the platform the frontend application is running on. Ideally, the front-end team will be responsible for managing the BFF as well, and now we can do this with the support of Kotlin for Backend.\r\nDuring this presentation, we will discuss aspects of BFF and how we can implement it as a mobile team.",
        "startsAt": "2021-10-20T11:10:00",
        "endsAt": "2021-10-20T11:30:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "29a51040-4b00-4576-b414-d585ea005057",
            "name": "Michal Szczepanik"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39665,
                "name": "Advanced Kotlin"
              },
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              },
              {
                "id": 39673,
                "name": "Core Skills"
              },
              {
                "id": 39676,
                "name": "Enterprise"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21050,
        "room": "Room 3",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "272453",
        "title": "Quick Apps: Speedy Development, Maximum Outreach",
        "description": "MiniApp is a new concept of light native-like applications that do not require installation and can be opened with just one tap or scanning a QR-code, enabling new business opportunities and maximizing user acquisition. This talk presents Quick Apps, a framework for mobile application development for Android, based on an MVVM architecture and the front-end web technology stack (JS, CSS, HTML) that implements the MiniApp specifications defined by W3C.\r\n\r\nQuick App enables developers to create \"light\" applications more efficiently through built-in components and access to devices' native resources (calendar, running in the background, network,‚Ä¶) with just 20% code lines than in native apps. Developers can deliver products and services, minimize the time-to-market, and support the complete product lifecycle management, including promotion, user acquisition, monetization, and user retention‚Äîeverything in less than 1MB.\r\n",
        "startsAt": "2021-10-20T11:10:00",
        "endsAt": "2021-10-20T11:30:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "41bf70c1-38b2-476a-b106-0bfec2d038da",
            "name": "Martin Alvarez-Espinar"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              },
              {
                "id": 39670,
                "name": "UI/UX/Design"
              },
              {
                "id": 39674,
                "name": "Case Studies / Research"
              },
              {
                "id": 39675,
                "name": "Open Source"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21048,
        "room": "Room 1",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "273169",
        "title": "Testing your React Native App - The Cypress way",
        "description": "Testing \r\nIn this talk, I will give a brief and beginner-friendly\r\n- introduction on what exactly is Cypress\r\n- explain the Cypress Test Runner\r\n- how to write your first test\r\n- explain how this has changed the way I test by giving real-life production examples\r\n\r\nYou will walk away with knowledge about what is Cypress and how you can use them in your React Native projects",
        "startsAt": "2021-10-20T11:10:00",
        "endsAt": "2021-10-20T11:30:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "abce342f-5df9-4251-86a5-15bf7025f3a8",
            "name": "Janhavi Dahihande"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39666,
                "name": "Testing"
              },
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21052,
        "room": "Room 5",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "279607",
        "title": "Kotlin Multiplatform Mobile in production: key takeaways from developing two cross-platform apps.",
        "description": "Kotlin Multiplatform Mobile is a young promising technology, but is it there to stay? And is it worth trying out? This talk is based on the experience of developing two very different cross-platform apps with KMM. The goal of this talk is to introduce KMM, discuss the pitfalls that a new KMM developer may encounter and share some valuable tips that were collected along the way of KMM development: from preferable app architecture to team requirements.",
        "startsAt": "2021-10-20T13:20:00",
        "endsAt": "2021-10-20T14:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "6a7c1f8a-784d-46be-8840-9cf519c4bc78",
            "name": "Lena Stepanova"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39662,
                "name": "Jetpack Compose"
              },
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              },
              {
                "id": 39674,
                "name": "Case Studies / Research"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21050,
        "room": "Room 3",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "283863",
        "title": "KMM story - from first feature to Mobile mono-repo at Sphere",
        "description": "We will share our thought process on the business case of a multiplatform core for mobile apps, and why it might not make sense in some cases. We will also share our experience in incremental transition in a 9-month timeframe alongside product development in parallel, and a high-level glimpse of the architecture.\r\n\r\nAppCore, our multi-platform framework:\r\n\r\nThe AppCore project powers the domain layer of both our Android and our iOS apps, and is enabled by Kotlin Multiplatform Mobile. It involves:\r\n\r\n- A database-first, unidirectional data flow architecture, Kotlin Coroutines and SQLDelight.\r\n- A strong emphasis on caching, synchronisation and persistence to facilitate the continuity and fluidity of our user experience.\r\n- Various backend integrations through Apollo GraphQL, Google Cloud Firestore and WebSocket.\r\n\r\n",
        "startsAt": "2021-10-20T14:10:00",
        "endsAt": "2021-10-20T14:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "3bd5e927-ef54-4335-9592-480c48c0ac35",
            "name": "Attila Blenesi"
          },
          {
            "id": "6c1e3dfb-e6e2-4263-9e3b-3d4e7e30fc25",
            "name": "Anders Ha"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39665,
                "name": "Advanced Kotlin"
              },
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              },
              {
                "id": 39671,
                "name": "Career & Leveling Up"
              },
              {
                "id": 39675,
                "name": "Open Source"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21050,
        "room": "Room 3",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "256259",
        "title": "Using GraphQL in a KMM project with Jetpack Compose and SwiftUI",
        "description": "In this talk John will show how GraphQL, using Apollo library, can be used in shared code in a Kotlin Multiplatform project with the UI developed using Jetpack Compose on Android and SwiftUI on iOS.\r\n\r\nThe talk will cover\r\n- use of Apollo GraphQL library and it's Kotlin Multiplatform support allowing addition of GraphQL queries and related logic in code shared between iOS and Android clients.\r\n- development of clients using Declarative UI frameworks (Jetpack Compose on Android and SwiftUI on iOS) ",
        "startsAt": "2021-10-20T15:10:00",
        "endsAt": "2021-10-20T15:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "0392772c-28d4-47f6-bd39-47d743fb4a81",
            "name": "John O'Reilly"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39662,
                "name": "Jetpack Compose"
              },
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21050,
        "room": "Room 3",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "245658",
        "title": "Flutter for TV platforms",
        "description": "Flutter for Mobile is released, Flutter for Web is in beta, Flutter for MacOs, Linux and Windows is in Alpha and it's really cool that Flutter officially supports six platforms.  But what if I want to run my Flutter app on the TV? Unfortunately, nobody has heard of the official Flutter for TV yet.\r\n\r\nActually, a Flutter app can be launched on TV (not AndroidTV only, but AppleTV, Tizen and others as well). In my talk, I'm going to tell you how to do this, and what difficulties and issues you will face and how to resolve them.",
        "startsAt": "2021-10-20T16:10:00",
        "endsAt": "2021-10-20T16:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "c73c2377-026f-4b6a-b1f7-91a536c33c67",
            "name": "Aleksandr Denisov"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21052,
        "room": "Room 5",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "284011",
        "title": "The Kotlin/Swift boundary",
        "description": "Kotlin/Native can compile to Objective-C-compatible bytecode, but that doesn‚Äôt mean it looks natural to native iOS developers. While Kotlin and Swift are syntactically very similar, they solve certain problems in very different ways. For example, a Swift developer often uses a struct where a Kotlin developer uses a data class. This means the default ways that things translate from Kotlin through Objective-C into Swift don‚Äôt always come out looking idiomatic\r\n\r\nWe‚Äôll talk through some of these differences, and strategies for dealing with them. Kotlin, Objective-C, and Swift are three different languages, and so we shouldn‚Äôt expect to be able to translate between them perfectly. But with a bit of care at the interop layer, we can make things a lot smoother in the iOS code.",
        "startsAt": "2021-10-20T16:10:00",
        "endsAt": "2021-10-20T16:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "7a1d47f2-dfd1-4af1-b097-5c415f9b29c3",
            "name": "Russell Wolf"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21048,
        "room": "Room 1",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "281303",
        "title": "Coroutines for Kotlin Multiplatform in practise",
        "description": "With coroutines being the de facto way of exposing async work and streams of changes for Kotlin on Android, developers are obviously attempting to use the same approaches when moving their code to Multiplatform.\r\n\r\nBut due to the way the memory model differs between JVM and Kotlin Native, it can be a painful experience. \r\n\r\nIn this talk, we will take a deep dive into the Coroutine API for Kotlin Multiplatform. You will learn how to expose your API with Coroutines while working with the Kotlin Native memory model instead of against it, and avoid the dragons along the way.\r\n",
        "startsAt": "2021-10-20T17:00:00",
        "endsAt": "2021-10-20T17:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "481c93ae-cba4-4058-bbe4-cb351bc9545f",
            "name": "Christian Melchior"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21049,
        "room": "Room 2",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "264405",
        "title": "Printed Circuit Boards and Android: A Love Story Between Two Engineering Disciplines",
        "description": "You know how to write Android Apps, but do you know how to design a circuit and let it get manufactured?\r\n\r\nOr you know about Printed Circuit Designs, but know nothing about Android App development?\r\n\r\nGreat, then welcome to this talk! I will be walking through my design process of a simple circuit, and the way I designed an app to communicate with this circuit. Expect some hardware terminology, some resistors, some LEDs, some fancy board designs, but also some Kotlin, some MVVM, and maybe even some Jetpack Compose to combine all of it together.\r\n\r\nAfter this talk, you might even be able to make your dream come true: A custom board, that communicates with your Android App, and who would not be excited about that?",
        "startsAt": "2021-10-21T12:00:00",
        "endsAt": "2021-10-21T12:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "fc80cf34-563e-4cd4-a04d-23d1191a7812",
            "name": "Mario Bodemann"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              },
              {
                "id": 39670,
                "name": "UI/UX/Design"
              },
              {
                "id": 39671,
                "name": "Career & Leveling Up"
              },
              {
                "id": 39675,
                "name": "Open Source"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21051,
        "room": "Room 4",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "283944",
        "title": "Offline first Flutter applications",
        "description": "Even though the world is becoming more \"online\" every day, there are still a lot of parts of the world that we all suffer connectivity problems. And, as we all know, as good developers, we should not let that affect the users' experiences in our applications.\r\n\r\nThinking \"offline\" first is a concept that we all suffer to achieve. With our Superlist application, we did a couple of experiments about being offline first, giving a seamless experience to the users on mobile and Desktop. \r\n\r\nWith this talk, I will share our experience with thinking \"offline\" first. You will learn about, what Flutter offers for being \"offline\" first, how you can achieve a great experience for your users by architecting your app the correct way, and most importantly, you will learn what NOT to do. :) ",
        "startsAt": "2021-10-21T13:40:00",
        "endsAt": "2021-10-21T14:20:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "adadf66f-529c-48fd-ba12-94903187a216",
            "name": "Salih Guler"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              },
              {
                "id": 39673,
                "name": "Core Skills"
              },
              {
                "id": 39674,
                "name": "Case Studies / Research"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21050,
        "room": "Room 3",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "245251",
        "title": "Improve your animations skills in Flutter",
        "description": "One of the main selling points of Flutter is its ability to quickly build stunning user interfaces and animations. In this talk you‚Äôll learn how to design and create basic and more sophisticated animations, micro-interactions and navigation transitions. I will show you techniques that help me design, debug and execute them without wasting a lot of time. We'll look into some performance optimization techniques as well.",
        "startsAt": "2021-10-21T14:30:00",
        "endsAt": "2021-10-21T15:10:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "29ba7916-20b4-48e5-9715-bddfbdd1aa3a",
            "name": "Dominik Roszkowski"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              },
              {
                "id": 39670,
                "name": "UI/UX/Design"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21050,
        "room": "Room 3",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "192645",
        "title": "Adding Flutter to your app - what are they not telling you?",
        "description": "Do you feel like using Flutter but the complexity of your existing project is preventing you from taking the first step? Is cross platform development on your mind but you‚Äôre unsure how Flutter can be adapted to the legacy code? Back in 2019 I was a part of one of the first companies to include parts of Flutter in its existing iOS & Android apps. Now I would like to retro that process with you.\r\n\r\nIn this talk we‚Äôll explore holistically what was the impact of choosing Flutter as a tech stack for the company. From the initial PoC to the first release, it's a unique insight on:\r\n\r\nMerging teams, dealing with the human factor.\r\nDefining adaptive design system\r\nMigration strategy & planning\r\nSoftware Architecture\r\nDevelopment Process: Tooling, Testing, CI/CD\r\nThe Dart Side - What is Google not telling you?\r\n",
        "startsAt": "2021-10-21T15:30:00",
        "endsAt": "2021-10-21T16:10:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "b705611a-2f7c-4bc0-9838-fadf368eed64",
            "name": "≈Åukasz Wi≈õniewski"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21050,
        "room": "Room 3",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "182024",
        "title": "Community Day Keynote: Android Trinity: Scala, Java, Kotlin... a dark destiny",
        "description": "Poor design decisions can have a big impact on the evolution of any codebase, thus leading to frustration and uncertainty.\r\nJoin me on this journey and let's explore together a bit of android history and a painful real case scenario: the story of an android codebase with three main characters, Scala, Java and Kotlin. \r\n\r\nHow they lived together, maintenance nightmares, feature development, architecture, challenges and a bunch of approaches that helped us kill this pain and create peace and harmony.",
        "startsAt": "2021-10-22T09:40:00",
        "endsAt": "2021-10-22T10:40:00",
        "isServiceSession": false,
        "isPlenumSession": true,
        "speakers": [
          {
            "id": "78a2d4e3-756a-4554-b21f-fc39106e384f",
            "name": "Fernando Cejas"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              },
              {
                "id": 39673,
                "name": "Core Skills"
              },
              {
                "id": 39675,
                "name": "Open Source"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21048,
        "room": "Room 1",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "277041",
        "title": "That's how we scroll in Flutter",
        "description": "Hands-on workshop on creating custom slivers for achieving beautiful and performant scrollable experiences. The workshop will:\r\n - introduce participants to slivers, their constraints, and layout properties,\r\n - teach how to embed slivers into one- and two-dimensional scrollable viewports,\r\n - present less common sliver attributes such as overlap,. ",
        "startsAt": "2021-10-22T13:20:00",
        "endsAt": "2021-10-22T14:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "d1ab7e75-b4d3-45d7-9ec7-350ce11835c1",
            "name": "Krzysztof Krasi≈Ñski-Sroka"
          },
          {
            "id": "10850701-76f0-4fe8-bac0-c9b955e61b8d",
            "name": "Jan Stƒôpie≈Ñ"
          },
          {
            "id": "7dc76b41-efec-4e79-9c7b-418d6bbca421",
            "name": "Artur P≈Çaczek"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              },
              {
                "id": 39670,
                "name": "UI/UX/Design"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21052,
        "room": "Room 5",
        "liveUrl": null,
        "recordingUrl": null
      }
    ]
  },
  {
    "groupId": 39669,
    "groupName": "AI/ML",
    "sessions": [
      {
        "questionAnswers": [],
        "id": "283333",
        "title": "Gradient descent is taking away your Android developer job",
        "description": "As an Android developer you are facing and mastering a lot of challenges and constant changes. Build systems, frameworks and libraries or even new programming languages are only a few to be mentioned.\r\n\r\nMeanwhile it is a matter of course, that a camera app in your mobile phone is powered by artificial intelligence. Big tech companies praise their apps with AI based features, highlighting a presence of dedicated hardware for neuronal networks in new products. \r\n\r\nWhile artificial intelligence is already affecting our daily life, the way how we develop software is going to change too. For example with AI based plugins for IDEs or APIs for translating natural language into a code. \r\n\r\nLet's have a look at the basics of data science and machine learning from a developer's perspective, so we can learn, extend and utilize new useful skills and techniques in software development. \r\n\r\nFinally we will also mention a gradient descent, an algorithm behind machine learning to get a picture, if it is really capable to write better code as a human can do. In this short trip you will see not only some math, but also a Kotlin code. \r\n\r\nYour are going to learn:\r\n\r\n* basic principles of neuronal networks\r\n* to rediscover a love for math\r\n* how not to fear the AI future, math and how to become a better developer.\r\n",
        "startsAt": "2021-10-21T14:30:00",
        "endsAt": "2021-10-21T15:10:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "bf79ffe5-f576-43e2-8d4b-3a43161c1a50",
            "name": "Michal Harakal"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39669,
                "name": "AI/ML"
              },
              {
                "id": 39671,
                "name": "Career & Leveling Up"
              },
              {
                "id": 39675,
                "name": "Open Source"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21051,
        "room": "Room 4",
        "liveUrl": null,
        "recordingUrl": null
      }
    ]
  },
  {
    "groupId": 39670,
    "groupName": "UI/UX/Design",
    "sessions": [
      {
        "questionAnswers": [],
        "id": "272453",
        "title": "Quick Apps: Speedy Development, Maximum Outreach",
        "description": "MiniApp is a new concept of light native-like applications that do not require installation and can be opened with just one tap or scanning a QR-code, enabling new business opportunities and maximizing user acquisition. This talk presents Quick Apps, a framework for mobile application development for Android, based on an MVVM architecture and the front-end web technology stack (JS, CSS, HTML) that implements the MiniApp specifications defined by W3C.\r\n\r\nQuick App enables developers to create \"light\" applications more efficiently through built-in components and access to devices' native resources (calendar, running in the background, network,‚Ä¶) with just 20% code lines than in native apps. Developers can deliver products and services, minimize the time-to-market, and support the complete product lifecycle management, including promotion, user acquisition, monetization, and user retention‚Äîeverything in less than 1MB.\r\n",
        "startsAt": "2021-10-20T11:10:00",
        "endsAt": "2021-10-20T11:30:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "41bf70c1-38b2-476a-b106-0bfec2d038da",
            "name": "Martin Alvarez-Espinar"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              },
              {
                "id": 39670,
                "name": "UI/UX/Design"
              },
              {
                "id": 39674,
                "name": "Case Studies / Research"
              },
              {
                "id": 39675,
                "name": "Open Source"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21048,
        "room": "Room 1",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "283798",
        "title": "Building a Production-Ready Chat SDK Using Jetpack Compose",
        "description": "In this session, we'll talk about how we built the world's first Jetpack Compose Chat SDK, what challenges we met along the way and why put so much trust into a technology that only recently became stable.\r\n\r\nWe'll talk about the API design and what decisions we've made to allow for both default behaviour and UI and a rich set of customisation options.",
        "startsAt": "2021-10-20T13:20:00",
        "endsAt": "2021-10-20T14:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "c88da7b5-3d9b-4157-a34a-9fc8de74de00",
            "name": "Filip Babiƒá"
          },
          {
            "id": "1916ae1c-96d7-480f-9eed-bf5dce444441",
            "name": "M√°rton Braun"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39662,
                "name": "Jetpack Compose"
              },
              {
                "id": 39663,
                "name": "Jetpack / Architecture Components"
              },
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39670,
                "name": "UI/UX/Design"
              },
              {
                "id": 39674,
                "name": "Case Studies / Research"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21048,
        "room": "Room 1",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "178904",
        "title": "Building complex screens with Epoxy",
        "description": "RecyclerView is one of the most used component in Android but it can be really hard to manage with different view types and scaling challenges.\r\n\r\nIn this talk, we will look at Epoxy to tackle these challenges; which is a library based upon RecyclerView for building complex screens\r\n\r\nAgenda\r\n- Challenges with RecyclerView\r\n- What and why Epoxy?\r\n- Core concepts\r\n- Building models with Epoxy\r\n- Epoxy Controller and Adapter\r\n- Diffing with Epoxy \r\n- Advantages and use cases\r\n- Conclusion\r\n\r\nYou'll walk away with clear idea on how to build complex screens with Epoxy and how it helped us to manage scaling within the team\r\n",
        "startsAt": "2021-10-20T13:20:00",
        "endsAt": "2021-10-20T14:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "a82de654-53d7-4c16-989a-5efddf36983e",
            "name": "Akshay Chordiya"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39670,
                "name": "UI/UX/Design"
              },
              {
                "id": 39674,
                "name": "Case Studies / Research"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21052,
        "room": "Room 5",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "283432",
        "title": "Introduction to dual-screen and foldables development",
        "description": "In this talk we will see what new form factor devices such as dual-screen and foldable devices are, and what they bring to the game. \r\nWe will see new dual-screen/foldable UI/UX design patterns, and we will learn about some of the existent fold-aware libraries, which will help us to create amazing new experiences for our users.",
        "startsAt": "2021-10-20T15:10:00",
        "endsAt": "2021-10-20T15:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "674a2237-30f1-4ec4-be9f-95cc4b7ab5ca",
            "name": "Cesar Valiente"
          },
          {
            "id": "5049f072-f326-4175-82d0-715e037a1d6d",
            "name": "Cristian Verdes"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39663,
                "name": "Jetpack / Architecture Components"
              },
              {
                "id": 39670,
                "name": "UI/UX/Design"
              },
              {
                "id": 39675,
                "name": "Open Source"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21051,
        "room": "Room 4",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "284727",
        "title": "How we engineered our design system",
        "description": "Our designers decided to use a design system.\r\nWhat is a design system? How can it help speed up the design and the development of a mobile application?\r\nWe have to align the entire application to that design system, build re-usable components which will speed the development time up without creating too many issues, avoiding code repetition and creating something that our designers can check and interact with before the features using the designs are shipped.\r\nA design system uses components, and that's where we started from. We decided to mimic the idea of `widgets` from Flutter. We had to engineer our system in a way that allowed us to create small enough (but not too atomic) components, re-usable, avoiding making them too big and complex (hard to read and understand, hard to refactor, etc..).\r\nThe decisions, how we made them (team effort - with all the suggestions, opinions and conversations we had to come to a solution) and how we are now using them to speed up the development of our app.\r\nWhat problem we faced, how we solved them, how this impacted our development speed and approach over the weeks (and how it will impact us in the future).",
        "startsAt": "2021-10-21T09:00:00",
        "endsAt": "2021-10-21T09:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "20f42a9e-5775-412c-8452-e5c00db447a1",
            "name": "Luca Nicoletti"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39665,
                "name": "Advanced Kotlin"
              },
              {
                "id": 39670,
                "name": "UI/UX/Design"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21050,
        "room": "Room 3",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "284671",
        "title": "Keeping your Pixels Perfect üì∏: Paparazzi 1.0",
        "description": "Unit tests allow you refactor your code with confidence and -- if architected correctly -- run blazingly fast!\r\n\r\nBut how do you ensure that your UI looks as expected? Espresso tests are hard to set up, prone to flakiness and require APKs, emulators, dexing, ADB...ugh. Snapshot tests get you closer but also rely on instrumentation tests.\r\n\r\nCome find out how we're improving the UI testing loop on Cash App with Paparazzi -- an Android testing library to render your application screens without a physical device or emulator!\r\n\r\nNote: this is an updated version of a talk I gave back in 2019 when Paparazzi was still in early development.",
        "startsAt": "2021-10-21T12:00:00",
        "endsAt": "2021-10-21T12:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "903c7a65-63f0-4244-8f8c-7ab8f7acae75",
            "name": "John Rodriguez"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39661,
                "name": "What's New in Android"
              },
              {
                "id": 39666,
                "name": "Testing"
              },
              {
                "id": 39670,
                "name": "UI/UX/Design"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21049,
        "room": "Room 2",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "264405",
        "title": "Printed Circuit Boards and Android: A Love Story Between Two Engineering Disciplines",
        "description": "You know how to write Android Apps, but do you know how to design a circuit and let it get manufactured?\r\n\r\nOr you know about Printed Circuit Designs, but know nothing about Android App development?\r\n\r\nGreat, then welcome to this talk! I will be walking through my design process of a simple circuit, and the way I designed an app to communicate with this circuit. Expect some hardware terminology, some resistors, some LEDs, some fancy board designs, but also some Kotlin, some MVVM, and maybe even some Jetpack Compose to combine all of it together.\r\n\r\nAfter this talk, you might even be able to make your dream come true: A custom board, that communicates with your Android App, and who would not be excited about that?",
        "startsAt": "2021-10-21T12:00:00",
        "endsAt": "2021-10-21T12:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "fc80cf34-563e-4cd4-a04d-23d1191a7812",
            "name": "Mario Bodemann"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              },
              {
                "id": 39670,
                "name": "UI/UX/Design"
              },
              {
                "id": 39671,
                "name": "Career & Leveling Up"
              },
              {
                "id": 39675,
                "name": "Open Source"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21051,
        "room": "Room 4",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "245251",
        "title": "Improve your animations skills in Flutter",
        "description": "One of the main selling points of Flutter is its ability to quickly build stunning user interfaces and animations. In this talk you‚Äôll learn how to design and create basic and more sophisticated animations, micro-interactions and navigation transitions. I will show you techniques that help me design, debug and execute them without wasting a lot of time. We'll look into some performance optimization techniques as well.",
        "startsAt": "2021-10-21T14:30:00",
        "endsAt": "2021-10-21T15:10:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "29ba7916-20b4-48e5-9715-bddfbdd1aa3a",
            "name": "Dominik Roszkowski"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              },
              {
                "id": 39670,
                "name": "UI/UX/Design"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21050,
        "room": "Room 3",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "179833",
        "title": "Boost Mobile UX by Following Best Practices",
        "description": "People want convenience, speed, and efficiency when using their mobile. However, many apps don‚Äôt follow established UX standards and best practices, as a result, frustrate people with bad UX. eCommerce sites and apps lose billions every year because they don‚Äôt observe best practices, and 75% of people open an app once and never again. We can unlock a solution: Truly excellent mobile UX relies on a set of standards, best practices, and conventions. In this talk, participants will acquire knowledge of specific mobile UX design best practices, interaction design principles, Laws of UX, and usability standards. Good and bad examples will be shown as we cover techniques, strategies, and best practices to boost mobile UX. ",
        "startsAt": "2021-10-21T16:20:00",
        "endsAt": "2021-10-21T17:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "0d4c0ee0-fcfd-43f2-9635-9e5bf687ae7d",
            "name": "Miklos Philips"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39670,
                "name": "UI/UX/Design"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21050,
        "room": "Room 3",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "287436",
        "title": "Enhance your single screen designed-app to make it shine on foldable devices",
        "description": "In this workshop, we will take an app that has been built with just single screen device scenarios on mind, and we will enhance it to make it great on foldable devices too, so users will enjoy a great new experience on these new devices.\r\n\r\nYou will learn how Jetpack WindowManager works, and what is needed to adjust the UI of your apps, so they shine on foldable devices.",
        "startsAt": "2021-10-22T11:00:00",
        "endsAt": "2021-10-22T12:20:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "674a2237-30f1-4ec4-be9f-95cc4b7ab5ca",
            "name": "Cesar Valiente"
          },
          {
            "id": "5049f072-f326-4175-82d0-715e037a1d6d",
            "name": "Cristian Verdes"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39663,
                "name": "Jetpack / Architecture Components"
              },
              {
                "id": 39670,
                "name": "UI/UX/Design"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21051,
        "room": "Room 4",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "277041",
        "title": "That's how we scroll in Flutter",
        "description": "Hands-on workshop on creating custom slivers for achieving beautiful and performant scrollable experiences. The workshop will:\r\n - introduce participants to slivers, their constraints, and layout properties,\r\n - teach how to embed slivers into one- and two-dimensional scrollable viewports,\r\n - present less common sliver attributes such as overlap,. ",
        "startsAt": "2021-10-22T13:20:00",
        "endsAt": "2021-10-22T14:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "d1ab7e75-b4d3-45d7-9ec7-350ce11835c1",
            "name": "Krzysztof Krasi≈Ñski-Sroka"
          },
          {
            "id": "10850701-76f0-4fe8-bac0-c9b955e61b8d",
            "name": "Jan Stƒôpie≈Ñ"
          },
          {
            "id": "7dc76b41-efec-4e79-9c7b-418d6bbca421",
            "name": "Artur P≈Çaczek"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              },
              {
                "id": 39670,
                "name": "UI/UX/Design"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21052,
        "room": "Room 5",
        "liveUrl": null,
        "recordingUrl": null
      }
    ]
  },
  {
    "groupId": 39671,
    "groupName": "Career & Leveling Up",
    "sessions": [
      {
        "questionAnswers": [],
        "id": "283863",
        "title": "KMM story - from first feature to Mobile mono-repo at Sphere",
        "description": "We will share our thought process on the business case of a multiplatform core for mobile apps, and why it might not make sense in some cases. We will also share our experience in incremental transition in a 9-month timeframe alongside product development in parallel, and a high-level glimpse of the architecture.\r\n\r\nAppCore, our multi-platform framework:\r\n\r\nThe AppCore project powers the domain layer of both our Android and our iOS apps, and is enabled by Kotlin Multiplatform Mobile. It involves:\r\n\r\n- A database-first, unidirectional data flow architecture, Kotlin Coroutines and SQLDelight.\r\n- A strong emphasis on caching, synchronisation and persistence to facilitate the continuity and fluidity of our user experience.\r\n- Various backend integrations through Apollo GraphQL, Google Cloud Firestore and WebSocket.\r\n\r\n",
        "startsAt": "2021-10-20T14:10:00",
        "endsAt": "2021-10-20T14:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "3bd5e927-ef54-4335-9592-480c48c0ac35",
            "name": "Attila Blenesi"
          },
          {
            "id": "6c1e3dfb-e6e2-4263-9e3b-3d4e7e30fc25",
            "name": "Anders Ha"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39665,
                "name": "Advanced Kotlin"
              },
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              },
              {
                "id": 39671,
                "name": "Career & Leveling Up"
              },
              {
                "id": 39675,
                "name": "Open Source"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21050,
        "room": "Room 3",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "283300",
        "title": "Becoming a mentor, why and how?",
        "description": "I've been actively mentoring developers in the past few years, in this talk I'd like to go over how I went from a position of being mentored to being the mentor, what mistakes I made along the way and what I learned. We will also respond to the false statement of \"mentoring is a waste of time\" and look at some key points such as:\r\n- mentoring, not micromanaging\r\n- creating a safe space where it's okay to make mistake\r\n- identifying areas that can be improved and coming up with a plan\r\n- developing a culture around pair programming ",
        "startsAt": "2021-10-20T17:00:00",
        "endsAt": "2021-10-20T17:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "0b65f68e-972b-41de-ae7a-92a2f77893c3",
            "name": "Florian Mierzejewski"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39671,
                "name": "Career & Leveling Up"
              },
              {
                "id": 39673,
                "name": "Core Skills"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21050,
        "room": "Room 3",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "264629",
        "title": "Coding and mental illness. A survival guide.",
        "description": "Being a coder with mental health problems has very unique challenges, especially if you don't know you have them. After 8 years of medication for depression/anxiety, Chris got his diagnosis for ADHD at the age of 37 and the treatment changed his life. In an industry that is rife with imposter syndrome and where mental hath \"quirks\" are often perceived as professional flaws or gaps in knowledge, Chris will share his experiences and give concrete helpful suggestions to overcome these challenges, as well as explaining to \"neurotypical\" people how they can be better allies.",
        "startsAt": "2021-10-21T09:00:00",
        "endsAt": "2021-10-21T09:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "f53882b1-df66-4d6c-9ec1-888badcdd224",
            "name": "Chris Ward"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39671,
                "name": "Career & Leveling Up"
              },
              {
                "id": 39678,
                "name": "Other (Please list in submission text)"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21051,
        "room": "Room 4",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "234403",
        "title": "From Opensource to Openmind",
        "description": "As an active open-source developer since 2006, I can advise about the opportunity of using an open-source approach to get the best for your business and let your company grow.\r\n\r\nOpen source is more of a philosophy than a thing you can buy. This philosophy is sustainable and has a win-win approach.\r\n\r\nFor developers, it‚Äôs a good habit that can increase professionalism and produces values for the developer and the community. For a company, it helps to be visible and share your products, thereby increasing profits. That‚Äôs why all of the big players moved into it. As a company, you still have time to start in the open-source game and be distinctive thanks to your open-source activity. Don‚Äôt wait too much longer, though.\r\n\r\nThe speech is articulated in these sections:\r\n\r\n1) introduction about my personal journey to opensource. This is important to create a rapport with the attendees and create trust in the speaker.\r\n\r\n2) what stop opensource to enter the companies until now a complete overview of the issues that prevent the opensource philosophy adoption in companies (patents, intellectual property, etc..)\r\n\r\n3) benefits we are loosing in this section I will explain the opportunities and the opportunity revenue of opensource\r\n\r\n4) conclusion in this section will be presented a solution to harmonize pro and cons of opensource to create a profitable business model in enterprises that bring benefits to business and to the community\r\n\r\nThe speech is about 30 minutes.\r\n\r\nYou can read an abstract of the speech on this article: - https://medium.com/better-programming/from-open-source-to-openmind-cb61ce05593a?source=friends_link&sk=adea560401b2d9def00c87d4cd86e4b1\r\n\r\nA demo pitch of the speech is here: - https://www.youtube.com/watch?v=hn2Wpkz6SJE&t=22s - https://speakerdeck.com/zeppaman/from-open-source-to-open-mind",
        "startsAt": "2021-10-21T10:40:00",
        "endsAt": "2021-10-21T11:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "f44807b4-db9f-42ea-a5d4-bcc50c224d57",
            "name": "Daniele Fontani"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39671,
                "name": "Career & Leveling Up"
              },
              {
                "id": 39675,
                "name": "Open Source"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21052,
        "room": "Room 5",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "189955",
        "title": "Junioring Senior Developers",
        "description": "Being a senior developer is great and it‚Äôs the goal of every junior developer. You feel like you know everything, you feel that every problem is solved as soon as you touch the keyboard, and it just feels easy and natural. \r\n\r\nBut more often than not, you forget how it feels to be a junior, to be at the beginning of the road, to start something new, to feel bad at what you do. We tend to forget how scary software development can be, and how discouraging working in a team of people that are more knowledgeable than you can feel.\r\n\r\nTo be a senior developer, you also need to be a teacher to your fellow junior developers. But how to teach them if you don‚Äôt understand their problems?!\r\n\r\nIn this talk, we will be tackling this problem.\r\nFirst, we will check what the causes of this problem are in the first place. Next, we will check different ways to overcome these issues. Finally, we will see how you can use your knowledge to help new developers make their first steps, how to be supportive, and help them become an irreplaceable part of the developer community.",
        "startsAt": "2021-10-21T10:40:00",
        "endsAt": "2021-10-21T11:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "c153d028-b5a3-4ee6-8b87-c02f88a4ede0",
            "name": "Vladimir Jovanoviƒá"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39671,
                "name": "Career & Leveling Up"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21048,
        "room": "Room 1",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "264405",
        "title": "Printed Circuit Boards and Android: A Love Story Between Two Engineering Disciplines",
        "description": "You know how to write Android Apps, but do you know how to design a circuit and let it get manufactured?\r\n\r\nOr you know about Printed Circuit Designs, but know nothing about Android App development?\r\n\r\nGreat, then welcome to this talk! I will be walking through my design process of a simple circuit, and the way I designed an app to communicate with this circuit. Expect some hardware terminology, some resistors, some LEDs, some fancy board designs, but also some Kotlin, some MVVM, and maybe even some Jetpack Compose to combine all of it together.\r\n\r\nAfter this talk, you might even be able to make your dream come true: A custom board, that communicates with your Android App, and who would not be excited about that?",
        "startsAt": "2021-10-21T12:00:00",
        "endsAt": "2021-10-21T12:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "fc80cf34-563e-4cd4-a04d-23d1191a7812",
            "name": "Mario Bodemann"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              },
              {
                "id": 39670,
                "name": "UI/UX/Design"
              },
              {
                "id": 39671,
                "name": "Career & Leveling Up"
              },
              {
                "id": 39675,
                "name": "Open Source"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21051,
        "room": "Room 4",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "283333",
        "title": "Gradient descent is taking away your Android developer job",
        "description": "As an Android developer you are facing and mastering a lot of challenges and constant changes. Build systems, frameworks and libraries or even new programming languages are only a few to be mentioned.\r\n\r\nMeanwhile it is a matter of course, that a camera app in your mobile phone is powered by artificial intelligence. Big tech companies praise their apps with AI based features, highlighting a presence of dedicated hardware for neuronal networks in new products. \r\n\r\nWhile artificial intelligence is already affecting our daily life, the way how we develop software is going to change too. For example with AI based plugins for IDEs or APIs for translating natural language into a code. \r\n\r\nLet's have a look at the basics of data science and machine learning from a developer's perspective, so we can learn, extend and utilize new useful skills and techniques in software development. \r\n\r\nFinally we will also mention a gradient descent, an algorithm behind machine learning to get a picture, if it is really capable to write better code as a human can do. In this short trip you will see not only some math, but also a Kotlin code. \r\n\r\nYour are going to learn:\r\n\r\n* basic principles of neuronal networks\r\n* to rediscover a love for math\r\n* how not to fear the AI future, math and how to become a better developer.\r\n",
        "startsAt": "2021-10-21T14:30:00",
        "endsAt": "2021-10-21T15:10:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "bf79ffe5-f576-43e2-8d4b-3a43161c1a50",
            "name": "Michal Harakal"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39669,
                "name": "AI/ML"
              },
              {
                "id": 39671,
                "name": "Career & Leveling Up"
              },
              {
                "id": 39675,
                "name": "Open Source"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21051,
        "room": "Room 4",
        "liveUrl": null,
        "recordingUrl": null
      }
    ]
  },
  {
    "groupId": 39672,
    "groupName": "Skill Focused Talk",
    "sessions": [
      {
        "questionAnswers": [],
        "id": "178612",
        "title": "Become a Pro in Android Studio",
        "description": "A tips and tricks session on making the most out of our best friend - and sometimes worst enemy - Android Studio.\r\n\r\nWe spend countless hours editing code and performing related tasks in Android Studio every day. This makes knowing about all of its capabilities and mastering its shortcuts a worthy endeavor. In this talk, we'll look at the things that every Android developer should be using in the IDE. We'll also touch on some features that are not essential, but are nice to know about.",
        "startsAt": "2021-10-20T11:40:00",
        "endsAt": "2021-10-20T12:20:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "1916ae1c-96d7-480f-9eed-bf5dce444441",
            "name": "M√°rton Braun"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39672,
                "name": "Skill Focused Talk"
              },
              {
                "id": 39673,
                "name": "Core Skills"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21051,
        "room": "Room 4",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "259203",
        "title": "Crashing is good for your App",
        "description": "As Android devs, we are usually too afraid of the crash. We go way too far to avoid crashing.\r\n\r\nSometimes our motto is no Crash at all costs.\r\n\r\nWrapping all of our java objects in double null checks, Elvis (?:) operators everywhere, absolutely no double bang (!!), \"try-catch\" everything.\r\n\r\nThese are just a few samples of what we do to avoid that innocent crash.\r\n\r\nI'm here to tell you to stop.\r\nWe should let our crashes happen. I'll tell you they are useful and helps us build better and safer apps.\r\nRemoving all of them does not help our apps or users.\r\n\r\nI explain Why it's bad to stop crashing at all costs.\r\nAlso cover how, where, and why we should throw to make the most out of them.\r\n\r\nLet's crash!!!",
        "startsAt": "2021-10-20T17:00:00",
        "endsAt": "2021-10-20T17:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "a9b18d70-903d-4990-9377-95048497d702",
            "name": "Seyed Jafari"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39666,
                "name": "Testing"
              },
              {
                "id": 39672,
                "name": "Skill Focused Talk"
              },
              {
                "id": 39673,
                "name": "Core Skills"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21052,
        "room": "Room 5",
        "liveUrl": null,
        "recordingUrl": null
      }
    ]
  },
  {
    "groupId": 39673,
    "groupName": "Core Skills",
    "sessions": [
      {
        "questionAnswers": [],
        "id": "283924",
        "title": "Backend for Frontend ‚Äì The secret of a great mobile project",
        "description": "‚ÄúWe have API for web, you can reuse it‚Äù ‚Äì sounds familiar? You know this problem which we usually have with API which is not tailored for mobile apps.  A BFF address the needs of respective frontend frameworks, like desktop, browser, and mobile apps. One of the biggest appeals of BFF is it ensures seamless user interaction regardless of the platform the frontend application is running on. Ideally, the front-end team will be responsible for managing the BFF as well, and now we can do this with the support of Kotlin for Backend.\r\nDuring this presentation, we will discuss aspects of BFF and how we can implement it as a mobile team.",
        "startsAt": "2021-10-20T11:10:00",
        "endsAt": "2021-10-20T11:30:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "29a51040-4b00-4576-b414-d585ea005057",
            "name": "Michal Szczepanik"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39665,
                "name": "Advanced Kotlin"
              },
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              },
              {
                "id": 39673,
                "name": "Core Skills"
              },
              {
                "id": 39676,
                "name": "Enterprise"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21050,
        "room": "Room 3",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "178612",
        "title": "Become a Pro in Android Studio",
        "description": "A tips and tricks session on making the most out of our best friend - and sometimes worst enemy - Android Studio.\r\n\r\nWe spend countless hours editing code and performing related tasks in Android Studio every day. This makes knowing about all of its capabilities and mastering its shortcuts a worthy endeavor. In this talk, we'll look at the things that every Android developer should be using in the IDE. We'll also touch on some features that are not essential, but are nice to know about.",
        "startsAt": "2021-10-20T11:40:00",
        "endsAt": "2021-10-20T12:20:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "1916ae1c-96d7-480f-9eed-bf5dce444441",
            "name": "M√°rton Braun"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39672,
                "name": "Skill Focused Talk"
              },
              {
                "id": 39673,
                "name": "Core Skills"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21051,
        "room": "Room 4",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "283300",
        "title": "Becoming a mentor, why and how?",
        "description": "I've been actively mentoring developers in the past few years, in this talk I'd like to go over how I went from a position of being mentored to being the mentor, what mistakes I made along the way and what I learned. We will also respond to the false statement of \"mentoring is a waste of time\" and look at some key points such as:\r\n- mentoring, not micromanaging\r\n- creating a safe space where it's okay to make mistake\r\n- identifying areas that can be improved and coming up with a plan\r\n- developing a culture around pair programming ",
        "startsAt": "2021-10-20T17:00:00",
        "endsAt": "2021-10-20T17:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "0b65f68e-972b-41de-ae7a-92a2f77893c3",
            "name": "Florian Mierzejewski"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39671,
                "name": "Career & Leveling Up"
              },
              {
                "id": 39673,
                "name": "Core Skills"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21050,
        "room": "Room 3",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "259203",
        "title": "Crashing is good for your App",
        "description": "As Android devs, we are usually too afraid of the crash. We go way too far to avoid crashing.\r\n\r\nSometimes our motto is no Crash at all costs.\r\n\r\nWrapping all of our java objects in double null checks, Elvis (?:) operators everywhere, absolutely no double bang (!!), \"try-catch\" everything.\r\n\r\nThese are just a few samples of what we do to avoid that innocent crash.\r\n\r\nI'm here to tell you to stop.\r\nWe should let our crashes happen. I'll tell you they are useful and helps us build better and safer apps.\r\nRemoving all of them does not help our apps or users.\r\n\r\nI explain Why it's bad to stop crashing at all costs.\r\nAlso cover how, where, and why we should throw to make the most out of them.\r\n\r\nLet's crash!!!",
        "startsAt": "2021-10-20T17:00:00",
        "endsAt": "2021-10-20T17:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "a9b18d70-903d-4990-9377-95048497d702",
            "name": "Seyed Jafari"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39666,
                "name": "Testing"
              },
              {
                "id": 39672,
                "name": "Skill Focused Talk"
              },
              {
                "id": 39673,
                "name": "Core Skills"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21052,
        "room": "Room 5",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "283944",
        "title": "Offline first Flutter applications",
        "description": "Even though the world is becoming more \"online\" every day, there are still a lot of parts of the world that we all suffer connectivity problems. And, as we all know, as good developers, we should not let that affect the users' experiences in our applications.\r\n\r\nThinking \"offline\" first is a concept that we all suffer to achieve. With our Superlist application, we did a couple of experiments about being offline first, giving a seamless experience to the users on mobile and Desktop. \r\n\r\nWith this talk, I will share our experience with thinking \"offline\" first. You will learn about, what Flutter offers for being \"offline\" first, how you can achieve a great experience for your users by architecting your app the correct way, and most importantly, you will learn what NOT to do. :) ",
        "startsAt": "2021-10-21T13:40:00",
        "endsAt": "2021-10-21T14:20:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "adadf66f-529c-48fd-ba12-94903187a216",
            "name": "Salih Guler"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              },
              {
                "id": 39673,
                "name": "Core Skills"
              },
              {
                "id": 39674,
                "name": "Case Studies / Research"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21050,
        "room": "Room 3",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "245462",
        "title": "How to survive on Android and don't get killed",
        "description": "A cold-blooded war is raging on Android between ‚Äúwhat users can do with their devices‚Äù and ‚Äúhow much their device lasts on one charge‚Äù. Every new Android OS version is less merciful about your background processes. Different OEMs kill your apps straight away without asking if you do something useful for your users or not. New weapons of mass destruction are invented year by year. Their names? Doze mode V1!, Doze mode V2!, Background restrictions!, Adaptive battery! and more are coming this year whose evil names are yet to be known. But we can already imagine their devastating powers. \r\n\r\nSome OEMs are more cruel than others. The darkest warlords of them all? Samsung, Huawei, OnePlus and Xiaomi in that order. They employ elite trained assassins called task killers whose insidious ways are yet to be documented. \r\n\r\nIt seems impossible to survive, but there is hope! A small group of relentless developers (let‚Äôs call them the Resistance) did gather around a project dontkillmyapp.com. They have risen up against the evil hordes of kill -9. They have years of experience with long running processes and alarms on Android since the carefree times of Cupcake till the dawn of Pie. And they are here to share tips and guides with users and developers on how to survive in those dark times. Viva la Resistance! \r\n\r\nP.S. we have cookies and a guitar song at the end!",
        "startsAt": "2021-10-21T16:20:00",
        "endsAt": "2021-10-21T17:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "acc2c985-0086-4938-a627-7879ccff60b2",
            "name": "Petr Nalevka"
          },
          {
            "id": "67137704-969a-4a78-8583-0a8e8c0e514b",
            "name": "Ji≈ô√≠ Richter"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39661,
                "name": "What's New in Android"
              },
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39673,
                "name": "Core Skills"
              },
              {
                "id": 39678,
                "name": "Other (Please list in submission text)"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21048,
        "room": "Room 1",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "182024",
        "title": "Community Day Keynote: Android Trinity: Scala, Java, Kotlin... a dark destiny",
        "description": "Poor design decisions can have a big impact on the evolution of any codebase, thus leading to frustration and uncertainty.\r\nJoin me on this journey and let's explore together a bit of android history and a painful real case scenario: the story of an android codebase with three main characters, Scala, Java and Kotlin. \r\n\r\nHow they lived together, maintenance nightmares, feature development, architecture, challenges and a bunch of approaches that helped us kill this pain and create peace and harmony.",
        "startsAt": "2021-10-22T09:40:00",
        "endsAt": "2021-10-22T10:40:00",
        "isServiceSession": false,
        "isPlenumSession": true,
        "speakers": [
          {
            "id": "78a2d4e3-756a-4554-b21f-fc39106e384f",
            "name": "Fernando Cejas"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              },
              {
                "id": 39673,
                "name": "Core Skills"
              },
              {
                "id": 39675,
                "name": "Open Source"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21048,
        "room": "Room 1",
        "liveUrl": null,
        "recordingUrl": null
      }
    ]
  },
  {
    "groupId": 39674,
    "groupName": "Case Studies / Research",
    "sessions": [
      {
        "questionAnswers": [],
        "id": "272453",
        "title": "Quick Apps: Speedy Development, Maximum Outreach",
        "description": "MiniApp is a new concept of light native-like applications that do not require installation and can be opened with just one tap or scanning a QR-code, enabling new business opportunities and maximizing user acquisition. This talk presents Quick Apps, a framework for mobile application development for Android, based on an MVVM architecture and the front-end web technology stack (JS, CSS, HTML) that implements the MiniApp specifications defined by W3C.\r\n\r\nQuick App enables developers to create \"light\" applications more efficiently through built-in components and access to devices' native resources (calendar, running in the background, network,‚Ä¶) with just 20% code lines than in native apps. Developers can deliver products and services, minimize the time-to-market, and support the complete product lifecycle management, including promotion, user acquisition, monetization, and user retention‚Äîeverything in less than 1MB.\r\n",
        "startsAt": "2021-10-20T11:10:00",
        "endsAt": "2021-10-20T11:30:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "41bf70c1-38b2-476a-b106-0bfec2d038da",
            "name": "Martin Alvarez-Espinar"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              },
              {
                "id": 39670,
                "name": "UI/UX/Design"
              },
              {
                "id": 39674,
                "name": "Case Studies / Research"
              },
              {
                "id": 39675,
                "name": "Open Source"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21048,
        "room": "Room 1",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "283798",
        "title": "Building a Production-Ready Chat SDK Using Jetpack Compose",
        "description": "In this session, we'll talk about how we built the world's first Jetpack Compose Chat SDK, what challenges we met along the way and why put so much trust into a technology that only recently became stable.\r\n\r\nWe'll talk about the API design and what decisions we've made to allow for both default behaviour and UI and a rich set of customisation options.",
        "startsAt": "2021-10-20T13:20:00",
        "endsAt": "2021-10-20T14:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "c88da7b5-3d9b-4157-a34a-9fc8de74de00",
            "name": "Filip Babiƒá"
          },
          {
            "id": "1916ae1c-96d7-480f-9eed-bf5dce444441",
            "name": "M√°rton Braun"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39662,
                "name": "Jetpack Compose"
              },
              {
                "id": 39663,
                "name": "Jetpack / Architecture Components"
              },
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39670,
                "name": "UI/UX/Design"
              },
              {
                "id": 39674,
                "name": "Case Studies / Research"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21048,
        "room": "Room 1",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "178904",
        "title": "Building complex screens with Epoxy",
        "description": "RecyclerView is one of the most used component in Android but it can be really hard to manage with different view types and scaling challenges.\r\n\r\nIn this talk, we will look at Epoxy to tackle these challenges; which is a library based upon RecyclerView for building complex screens\r\n\r\nAgenda\r\n- Challenges with RecyclerView\r\n- What and why Epoxy?\r\n- Core concepts\r\n- Building models with Epoxy\r\n- Epoxy Controller and Adapter\r\n- Diffing with Epoxy \r\n- Advantages and use cases\r\n- Conclusion\r\n\r\nYou'll walk away with clear idea on how to build complex screens with Epoxy and how it helped us to manage scaling within the team\r\n",
        "startsAt": "2021-10-20T13:20:00",
        "endsAt": "2021-10-20T14:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "a82de654-53d7-4c16-989a-5efddf36983e",
            "name": "Akshay Chordiya"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39670,
                "name": "UI/UX/Design"
              },
              {
                "id": 39674,
                "name": "Case Studies / Research"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21052,
        "room": "Room 5",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "279607",
        "title": "Kotlin Multiplatform Mobile in production: key takeaways from developing two cross-platform apps.",
        "description": "Kotlin Multiplatform Mobile is a young promising technology, but is it there to stay? And is it worth trying out? This talk is based on the experience of developing two very different cross-platform apps with KMM. The goal of this talk is to introduce KMM, discuss the pitfalls that a new KMM developer may encounter and share some valuable tips that were collected along the way of KMM development: from preferable app architecture to team requirements.",
        "startsAt": "2021-10-20T13:20:00",
        "endsAt": "2021-10-20T14:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "6a7c1f8a-784d-46be-8840-9cf519c4bc78",
            "name": "Lena Stepanova"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39662,
                "name": "Jetpack Compose"
              },
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              },
              {
                "id": 39674,
                "name": "Case Studies / Research"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21050,
        "room": "Room 3",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "284185",
        "title": "Clean up state handling with a state machine",
        "description": "As the TIER app grew bigger, to keep the code maintainable, we retrofitted a state machine for managing ride state in the app. In this talk I'll provide a brief overview of why and how we implemented it, the benefits it has brought, and the challenges we had to face introducing it.",
        "startsAt": "2021-10-21T10:40:00",
        "endsAt": "2021-10-21T11:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "5ccb76c1-5af2-410a-9502-2940d5db8722",
            "name": "Daniel Gergely"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39674,
                "name": "Case Studies / Research"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21051,
        "room": "Room 4",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "283944",
        "title": "Offline first Flutter applications",
        "description": "Even though the world is becoming more \"online\" every day, there are still a lot of parts of the world that we all suffer connectivity problems. And, as we all know, as good developers, we should not let that affect the users' experiences in our applications.\r\n\r\nThinking \"offline\" first is a concept that we all suffer to achieve. With our Superlist application, we did a couple of experiments about being offline first, giving a seamless experience to the users on mobile and Desktop. \r\n\r\nWith this talk, I will share our experience with thinking \"offline\" first. You will learn about, what Flutter offers for being \"offline\" first, how you can achieve a great experience for your users by architecting your app the correct way, and most importantly, you will learn what NOT to do. :) ",
        "startsAt": "2021-10-21T13:40:00",
        "endsAt": "2021-10-21T14:20:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "adadf66f-529c-48fd-ba12-94903187a216",
            "name": "Salih Guler"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              },
              {
                "id": 39673,
                "name": "Core Skills"
              },
              {
                "id": 39674,
                "name": "Case Studies / Research"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21050,
        "room": "Room 3",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "284015",
        "title": "Crash-reporting taken to next-level",
        "description": "Monitoring app crashes is essential for app stability and the agility to respond to issues quickly. Most teams use Crashlytics from Firebase because it is powerful yet simple. Operating in 50+ countries and processing 10+ Millions of orders per day, we needed to take Crashlytics to the next-level.\r\n\r\nIn this talk, we would like to share our experience on how we built our custom crash-reporting tooling that is built using powerful tools like Google BigQuery, and Google Data Studio. Using Google BigQuery also gave us the ability to transform and clean our raw data and join with Firebase Analytics datasets. At the end of our presentation, we would like to present a couple of real-life scenarios and show you how we used our custom dashboard to decrease our root cause finding time and saved our engineers time more than 40%.",
        "startsAt": "2021-10-21T16:20:00",
        "endsAt": "2021-10-21T17:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "91d1e71d-2061-46ee-a765-08dfe0f11270",
            "name": "Tahsin Dane"
          },
          {
            "id": "4d8f72b6-e22a-4519-8d4e-ae3b5cbaef2b",
            "name": "Sevan Acemoglu"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39674,
                "name": "Case Studies / Research"
              },
              {
                "id": 39678,
                "name": "Other (Please list in submission text)"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21049,
        "room": "Room 2",
        "liveUrl": null,
        "recordingUrl": null
      }
    ]
  },
  {
    "groupId": 39675,
    "groupName": "Open Source",
    "sessions": [
      {
        "questionAnswers": [],
        "id": "272453",
        "title": "Quick Apps: Speedy Development, Maximum Outreach",
        "description": "MiniApp is a new concept of light native-like applications that do not require installation and can be opened with just one tap or scanning a QR-code, enabling new business opportunities and maximizing user acquisition. This talk presents Quick Apps, a framework for mobile application development for Android, based on an MVVM architecture and the front-end web technology stack (JS, CSS, HTML) that implements the MiniApp specifications defined by W3C.\r\n\r\nQuick App enables developers to create \"light\" applications more efficiently through built-in components and access to devices' native resources (calendar, running in the background, network,‚Ä¶) with just 20% code lines than in native apps. Developers can deliver products and services, minimize the time-to-market, and support the complete product lifecycle management, including promotion, user acquisition, monetization, and user retention‚Äîeverything in less than 1MB.\r\n",
        "startsAt": "2021-10-20T11:10:00",
        "endsAt": "2021-10-20T11:30:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "41bf70c1-38b2-476a-b106-0bfec2d038da",
            "name": "Martin Alvarez-Espinar"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              },
              {
                "id": 39670,
                "name": "UI/UX/Design"
              },
              {
                "id": 39674,
                "name": "Case Studies / Research"
              },
              {
                "id": 39675,
                "name": "Open Source"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21048,
        "room": "Room 1",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "283863",
        "title": "KMM story - from first feature to Mobile mono-repo at Sphere",
        "description": "We will share our thought process on the business case of a multiplatform core for mobile apps, and why it might not make sense in some cases. We will also share our experience in incremental transition in a 9-month timeframe alongside product development in parallel, and a high-level glimpse of the architecture.\r\n\r\nAppCore, our multi-platform framework:\r\n\r\nThe AppCore project powers the domain layer of both our Android and our iOS apps, and is enabled by Kotlin Multiplatform Mobile. It involves:\r\n\r\n- A database-first, unidirectional data flow architecture, Kotlin Coroutines and SQLDelight.\r\n- A strong emphasis on caching, synchronisation and persistence to facilitate the continuity and fluidity of our user experience.\r\n- Various backend integrations through Apollo GraphQL, Google Cloud Firestore and WebSocket.\r\n\r\n",
        "startsAt": "2021-10-20T14:10:00",
        "endsAt": "2021-10-20T14:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "3bd5e927-ef54-4335-9592-480c48c0ac35",
            "name": "Attila Blenesi"
          },
          {
            "id": "6c1e3dfb-e6e2-4263-9e3b-3d4e7e30fc25",
            "name": "Anders Ha"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39665,
                "name": "Advanced Kotlin"
              },
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              },
              {
                "id": 39671,
                "name": "Career & Leveling Up"
              },
              {
                "id": 39675,
                "name": "Open Source"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21050,
        "room": "Room 3",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "204072",
        "title": "Lesson Learned from building successful android library: PhotoEditor",
        "description": "Building the same components from scratch for your Android projects time after time just doesn‚Äôt make sense. This is why libraries are really powerful ‚Äî Building an android library is easy, but building one that keeps in mind developer happiness is rare but not hard. And if you build something cool yourself, why not share it with the world?\r\nIn this talk, I‚Äôm going to share what I learned building an android library called PhotoEditor, which has become the most widely used android library for Photo Editing with 1,50,000 downloads so far. If you new to android or don‚Äôt know anything about Android or Photo editing, its fine since the learnings I want to share is about what it takes to build an open-source Android library and want I‚Äôve learned from it.",
        "startsAt": "2021-10-20T14:10:00",
        "endsAt": "2021-10-20T14:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "b85b6a25-e3ae-4bba-8981-86eaa137a180",
            "name": "Burhanuddin Rashid"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39675,
                "name": "Open Source"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21052,
        "room": "Room 5",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "260687",
        "title": "What is the Android Cache Fix plugin and why do I need to solve my own cache misses?",
        "description": "This talk covers how to find cache misses, why cache misses happen, and why Gradle can't always automatically fix them for you. We'll also dive deep into the Android cache fix plugin to figure out some of the dirtiest cache misses in the Android ecosystem and why they still exist.\r\n\r\n",
        "startsAt": "2021-10-20T14:10:00",
        "endsAt": "2021-10-20T14:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "89694c9d-5de0-4f39-a50a-ed48d6eb56ca",
            "name": "Nelson Osacky"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39675,
                "name": "Open Source"
              },
              {
                "id": 39678,
                "name": "Other (Please list in submission text)"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21051,
        "room": "Room 4",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "283432",
        "title": "Introduction to dual-screen and foldables development",
        "description": "In this talk we will see what new form factor devices such as dual-screen and foldable devices are, and what they bring to the game. \r\nWe will see new dual-screen/foldable UI/UX design patterns, and we will learn about some of the existent fold-aware libraries, which will help us to create amazing new experiences for our users.",
        "startsAt": "2021-10-20T15:10:00",
        "endsAt": "2021-10-20T15:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "674a2237-30f1-4ec4-be9f-95cc4b7ab5ca",
            "name": "Cesar Valiente"
          },
          {
            "id": "5049f072-f326-4175-82d0-715e037a1d6d",
            "name": "Cristian Verdes"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39663,
                "name": "Jetpack / Architecture Components"
              },
              {
                "id": 39670,
                "name": "UI/UX/Design"
              },
              {
                "id": 39675,
                "name": "Open Source"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21051,
        "room": "Room 4",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "234403",
        "title": "From Opensource to Openmind",
        "description": "As an active open-source developer since 2006, I can advise about the opportunity of using an open-source approach to get the best for your business and let your company grow.\r\n\r\nOpen source is more of a philosophy than a thing you can buy. This philosophy is sustainable and has a win-win approach.\r\n\r\nFor developers, it‚Äôs a good habit that can increase professionalism and produces values for the developer and the community. For a company, it helps to be visible and share your products, thereby increasing profits. That‚Äôs why all of the big players moved into it. As a company, you still have time to start in the open-source game and be distinctive thanks to your open-source activity. Don‚Äôt wait too much longer, though.\r\n\r\nThe speech is articulated in these sections:\r\n\r\n1) introduction about my personal journey to opensource. This is important to create a rapport with the attendees and create trust in the speaker.\r\n\r\n2) what stop opensource to enter the companies until now a complete overview of the issues that prevent the opensource philosophy adoption in companies (patents, intellectual property, etc..)\r\n\r\n3) benefits we are loosing in this section I will explain the opportunities and the opportunity revenue of opensource\r\n\r\n4) conclusion in this section will be presented a solution to harmonize pro and cons of opensource to create a profitable business model in enterprises that bring benefits to business and to the community\r\n\r\nThe speech is about 30 minutes.\r\n\r\nYou can read an abstract of the speech on this article: - https://medium.com/better-programming/from-open-source-to-openmind-cb61ce05593a?source=friends_link&sk=adea560401b2d9def00c87d4cd86e4b1\r\n\r\nA demo pitch of the speech is here: - https://www.youtube.com/watch?v=hn2Wpkz6SJE&t=22s - https://speakerdeck.com/zeppaman/from-open-source-to-open-mind",
        "startsAt": "2021-10-21T10:40:00",
        "endsAt": "2021-10-21T11:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "f44807b4-db9f-42ea-a5d4-bcc50c224d57",
            "name": "Daniele Fontani"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39671,
                "name": "Career & Leveling Up"
              },
              {
                "id": 39675,
                "name": "Open Source"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21052,
        "room": "Room 5",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "265790",
        "title": "Detekt - State of the Union",
        "description": "Do you know detekt? We are The static analyzer for Kotlin, trusted by millions of developers around the globe, and completely built by the open-source community.\r\n\r\nOur mission: spotting bugs, anti-patterns, and potential errors in your Kotlin code.\r\n\r\nDid you know that you can extend detekt with your custom rules?\r\nDid you know that we recently launched support for Kotlin Multiplatform?\r\nDid you know that we're always looking for new contributors?\r\n\r\nWhether you're new to detekt or you're a veteran, this talk is for you!\r\nWe will walk through the tool, and give you updates on the latest features we shipped and what comes next for the future.",
        "startsAt": "2021-10-21T11:10:00",
        "endsAt": "2021-10-21T11:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "8730d40b-3fb7-450d-ab71-08c9dd81a48a",
            "name": "Nicola Corti"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39675,
                "name": "Open Source"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21051,
        "room": "Room 4",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "264405",
        "title": "Printed Circuit Boards and Android: A Love Story Between Two Engineering Disciplines",
        "description": "You know how to write Android Apps, but do you know how to design a circuit and let it get manufactured?\r\n\r\nOr you know about Printed Circuit Designs, but know nothing about Android App development?\r\n\r\nGreat, then welcome to this talk! I will be walking through my design process of a simple circuit, and the way I designed an app to communicate with this circuit. Expect some hardware terminology, some resistors, some LEDs, some fancy board designs, but also some Kotlin, some MVVM, and maybe even some Jetpack Compose to combine all of it together.\r\n\r\nAfter this talk, you might even be able to make your dream come true: A custom board, that communicates with your Android App, and who would not be excited about that?",
        "startsAt": "2021-10-21T12:00:00",
        "endsAt": "2021-10-21T12:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "fc80cf34-563e-4cd4-a04d-23d1191a7812",
            "name": "Mario Bodemann"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              },
              {
                "id": 39670,
                "name": "UI/UX/Design"
              },
              {
                "id": 39671,
                "name": "Career & Leveling Up"
              },
              {
                "id": 39675,
                "name": "Open Source"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21051,
        "room": "Room 4",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "273507",
        "title": "WebRTC on Android.  Simplier than you thought!",
        "description": "WebRTC is one of the main standards in Video/Audio communication, but unfortunately, it's quite hard to find enough information on how to work with it on Android. Documents are outdated, examples are simple and high level. We are going to dive deeper into WebRTC on Android! I'll tell you how to build it from sources and create a simple p2p video chat Android app.",
        "startsAt": "2021-10-21T13:40:00",
        "endsAt": "2021-10-21T14:20:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "61e8cdda-7b13-43d6-b69c-3bd65ebf8524",
            "name": "Artem Bagritsevich"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39675,
                "name": "Open Source"
              },
              {
                "id": 39678,
                "name": "Other (Please list in submission text)"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21051,
        "room": "Room 4",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "283333",
        "title": "Gradient descent is taking away your Android developer job",
        "description": "As an Android developer you are facing and mastering a lot of challenges and constant changes. Build systems, frameworks and libraries or even new programming languages are only a few to be mentioned.\r\n\r\nMeanwhile it is a matter of course, that a camera app in your mobile phone is powered by artificial intelligence. Big tech companies praise their apps with AI based features, highlighting a presence of dedicated hardware for neuronal networks in new products. \r\n\r\nWhile artificial intelligence is already affecting our daily life, the way how we develop software is going to change too. For example with AI based plugins for IDEs or APIs for translating natural language into a code. \r\n\r\nLet's have a look at the basics of data science and machine learning from a developer's perspective, so we can learn, extend and utilize new useful skills and techniques in software development. \r\n\r\nFinally we will also mention a gradient descent, an algorithm behind machine learning to get a picture, if it is really capable to write better code as a human can do. In this short trip you will see not only some math, but also a Kotlin code. \r\n\r\nYour are going to learn:\r\n\r\n* basic principles of neuronal networks\r\n* to rediscover a love for math\r\n* how not to fear the AI future, math and how to become a better developer.\r\n",
        "startsAt": "2021-10-21T14:30:00",
        "endsAt": "2021-10-21T15:10:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "bf79ffe5-f576-43e2-8d4b-3a43161c1a50",
            "name": "Michal Harakal"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39669,
                "name": "AI/ML"
              },
              {
                "id": 39671,
                "name": "Career & Leveling Up"
              },
              {
                "id": 39675,
                "name": "Open Source"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21051,
        "room": "Room 4",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "272269",
        "title": "Automating Android Workflows with Github Actions",
        "description": "Github Actions is the new kid on block regarding CI/CD products, and particularly it has been attracting a lot of attention from Software Engineers given its seamless integration with Github. It is not surprising that it has been quickly adopted both at open-source projects and private-source projects, with Android being no exception to that\r\n\r\nIn this talk we'll review the fundamentals of Github Actions as a CI/CD platform and learn how to make the most of it when designing and implementing automations particularly important for Android projects. We'll learn about particularities and limitations one might find when moving a big Android project over Github Actions and review most of the common solutions we have for Android-specific use cases. \r\n\r\nTags : CI/CD, Automation, Github Actions, Mobile DevOps",
        "startsAt": "2021-10-21T16:20:00",
        "endsAt": "2021-10-21T17:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "31c510dd-848a-4b2f-91fa-c9994e3b4cf4",
            "name": "Ubiratan Soares"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39675,
                "name": "Open Source"
              },
              {
                "id": 39678,
                "name": "Other (Please list in submission text)"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21052,
        "room": "Room 5",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "182024",
        "title": "Community Day Keynote: Android Trinity: Scala, Java, Kotlin... a dark destiny",
        "description": "Poor design decisions can have a big impact on the evolution of any codebase, thus leading to frustration and uncertainty.\r\nJoin me on this journey and let's explore together a bit of android history and a painful real case scenario: the story of an android codebase with three main characters, Scala, Java and Kotlin. \r\n\r\nHow they lived together, maintenance nightmares, feature development, architecture, challenges and a bunch of approaches that helped us kill this pain and create peace and harmony.",
        "startsAt": "2021-10-22T09:40:00",
        "endsAt": "2021-10-22T10:40:00",
        "isServiceSession": false,
        "isPlenumSession": true,
        "speakers": [
          {
            "id": "78a2d4e3-756a-4554-b21f-fc39106e384f",
            "name": "Fernando Cejas"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              },
              {
                "id": 39673,
                "name": "Core Skills"
              },
              {
                "id": 39675,
                "name": "Open Source"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21048,
        "room": "Room 1",
        "liveUrl": null,
        "recordingUrl": null
      }
    ]
  },
  {
    "groupId": 39676,
    "groupName": "Enterprise",
    "sessions": [
      {
        "questionAnswers": [],
        "id": "283924",
        "title": "Backend for Frontend ‚Äì The secret of a great mobile project",
        "description": "‚ÄúWe have API for web, you can reuse it‚Äù ‚Äì sounds familiar? You know this problem which we usually have with API which is not tailored for mobile apps.  A BFF address the needs of respective frontend frameworks, like desktop, browser, and mobile apps. One of the biggest appeals of BFF is it ensures seamless user interaction regardless of the platform the frontend application is running on. Ideally, the front-end team will be responsible for managing the BFF as well, and now we can do this with the support of Kotlin for Backend.\r\nDuring this presentation, we will discuss aspects of BFF and how we can implement it as a mobile team.",
        "startsAt": "2021-10-20T11:10:00",
        "endsAt": "2021-10-20T11:30:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "29a51040-4b00-4576-b414-d585ea005057",
            "name": "Michal Szczepanik"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39665,
                "name": "Advanced Kotlin"
              },
              {
                "id": 39668,
                "name": "Cross/Multi-Platform Development"
              },
              {
                "id": 39673,
                "name": "Core Skills"
              },
              {
                "id": 39676,
                "name": "Enterprise"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21050,
        "room": "Room 3",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "246566",
        "title": "Writing Apps for the Work Profile",
        "description": "Android‚Äôs Work Profile has been around since Lollipop & it‚Äôs a great way to separate your work and personal lives but having your app live in that work profile comes with some special considerations ‚Äì how does it get installed?  How does it get configured?  How will the employee‚Äôs administrator expect my app to behave?\r\n\r\nI have been working with Enterprise applications since the Work profile was first introduced and, in this talk, I will walk through how to create the best experience both for the end user and their device administrator.",
        "startsAt": "2021-10-20T11:10:00",
        "endsAt": "2021-10-20T11:30:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "ce06ea99-74e6-4d25-9da9-a5e5cac58bb6",
            "name": "Darryn Campbell"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39676,
                "name": "Enterprise"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21049,
        "room": "Room 2",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "279116",
        "title": "How to best authenticate with non-Google identities",
        "description": "Applications have traditionally called in-app WebViews for authenticating against third party identity providers. This approach leaves users open to security vulnerabilities and limits new, innovative features around authentication. We'll explain the right ways to authenticate your users and work we're doing to improve security and authentication, especially for enterprise users.",
        "startsAt": "2021-10-20T17:00:00",
        "endsAt": "2021-10-20T17:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "c0d4282f-991e-4f42-aca4-e0f578a20731",
            "name": "Paul Ruiz"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39676,
                "name": "Enterprise"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21051,
        "room": "Room 4",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "283586",
        "title": "Scaling App development at Zalando",
        "description": "Zalando has invested heavily in their mobile platforms over the past years. As a result, development teams have grown by leaps and bounds. Accommodating this level of contributions is posing some unique organizational challenges.\r\n\r\nIn this talk, we focus on the architectural quest to decouple a team‚Äôs day-to-day work from unrelated streams of changes. We present our efforts to restructure our app monolith into a modularized and extensible platform that enables long-term growth and allows for smooth and concurrent feature development.",
        "startsAt": "2021-10-21T13:40:00",
        "endsAt": "2021-10-21T14:20:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "f9694afb-3cfc-428f-b043-0092f6bdb652",
            "name": "Volker Leck"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39676,
                "name": "Enterprise"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21048,
        "room": "Room 1",
        "liveUrl": null,
        "recordingUrl": null
      }
    ]
  },
  {
    "groupId": 39677,
    "groupName": "Security",
    "sessions": [
      {
        "questionAnswers": [],
        "id": "281827",
        "title": "Your new Data Safety section on Google Play",
        "description": "In October, developers can start filling out information in Play Console for the upcoming Data Safety section in Google Play, where developers can showcase their privacy and security practices and explain to users what data the app uses and why.",
        "startsAt": "2021-10-20T11:10:00",
        "endsAt": "2021-10-20T11:30:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "ee1e83e0-a2e1-4c67-a993-2565529143e2",
            "name": "Aisha Iqbal"
          },
          {
            "id": "37847a78-921b-49ab-a9ad-d03c395b04fa",
            "name": "Tina Sriskandarajah"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39661,
                "name": "What's New in Android"
              },
              {
                "id": 39677,
                "name": "Security"
              },
              {
                "id": 39678,
                "name": "Other (Please list in submission text)"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21051,
        "room": "Room 4",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "205319",
        "title": "Sign-in with Apple on Android devices?",
        "description": "Learn about Sign In with Apple, the new identity provider announced at Apple WWDC 2019. This auth provider doesn't only work on Apple devices, but also on Android devices. \r\n\r\nIn this session, I will show why you should also provide Sign in with Apple to your users and how to do it.",
        "startsAt": "2021-10-21T10:40:00",
        "endsAt": "2021-10-21T11:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "ca350f30-7945-4b1c-8a23-663346e39e88",
            "name": "Devlin Duldulao"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39677,
                "name": "Security"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21049,
        "room": "Room 2",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "262864",
        "title": "Practical tips for succeeding with CI/CD for Android",
        "description": "Android teams often have to build and maintain their own CI/CD pipelines. This at first seems straightforward to implement and maintain. Yet it can often quickly become a tedious time sink and a source of universal frustration on many teams. \r\nFrom flaky builds, to long running builds, to flaky long running builds, the sources of frustration are endless. With the goal to ship more and faster as well as to compete in an ever changing industry, we can (and must) do better. \r\n\r\nThis talk will cover best practices for performance, stability, security, and maintainability of CI/CD pipelines with a focus on developing for Android, each supported with practical examples and counterexamples.\r\n",
        "startsAt": "2021-10-21T11:10:00",
        "endsAt": "2021-10-21T11:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "56eefe06-593b-4455-94dc-e3422fc4f81e",
            "name": "Zan Markan"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39666,
                "name": "Testing"
              },
              {
                "id": 39677,
                "name": "Security"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21049,
        "room": "Room 2",
        "liveUrl": null,
        "recordingUrl": null
      }
    ]
  },
  {
    "groupId": 39678,
    "groupName": "Other (Please list in submission text)",
    "sessions": [
      {
        "questionAnswers": [],
        "id": "281827",
        "title": "Your new Data Safety section on Google Play",
        "description": "In October, developers can start filling out information in Play Console for the upcoming Data Safety section in Google Play, where developers can showcase their privacy and security practices and explain to users what data the app uses and why.",
        "startsAt": "2021-10-20T11:10:00",
        "endsAt": "2021-10-20T11:30:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "ee1e83e0-a2e1-4c67-a993-2565529143e2",
            "name": "Aisha Iqbal"
          },
          {
            "id": "37847a78-921b-49ab-a9ad-d03c395b04fa",
            "name": "Tina Sriskandarajah"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39661,
                "name": "What's New in Android"
              },
              {
                "id": 39677,
                "name": "Security"
              },
              {
                "id": 39678,
                "name": "Other (Please list in submission text)"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21051,
        "room": "Room 4",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "283955",
        "title": "KMP for Mobile Developers",
        "description": "Android and Kotlin developers have been excited about KMP, and the prospect of being able to use it in different platforms, but what about Swift developers? Can KMP help them to write multiplatform code? Does it make sense for them? What is the current State of the Art of KMP and Swift? In this talk we will give an overview of KMP for mostly for swifteristas, and try to answer those questions and more.",
        "startsAt": "2021-10-20T11:40:00",
        "endsAt": "2021-10-20T12:20:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "2f606e32-997a-4b74-8420-76a47e7d66a3",
            "name": "Enrique Lopez Ma√±as"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39678,
                "name": "Other (Please list in submission text)"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21050,
        "room": "Room 3",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "251124",
        "title": "The journey of adopting Jetpack Compose in Babbel‚Äôs App",
        "description": "As the world‚Äôs first language learning app. A leader in the online language learning industry and ranked as the world‚Äôs #1 innovative company in education.\r\nIn Babbel engineering, we always thrive to provide not only the latest technology to serve our customers but also the latest technology that saves us time and enhances our product quality and performance.\r\nHence, we have always been early adopters of the newest tech that fits our needs. And Jetpack Compose is no different.\r\n\r\nIn this session, we will be sharing Our journey of adopting Compose into the Babbel App, the lessons learned, the ups and downs, the decisions we made and why we made them, and how to replicate that in your app. Basically, all and every takeaway from our journey starting from adopting the compose mindset all the way to how we integrated it with the already existing app architecture, design system and see what differences Compose has made to the Babbel app.\r\n\r\nThis isn‚Äôt a sci-fi or a fairytale, but let us take you on the real-world adventure that was integrating Compose into the Babbel app.",
        "startsAt": "2021-10-20T11:40:00",
        "endsAt": "2021-10-20T12:20:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "c3962084-3989-4f85-8ff8-86dd728f068c",
            "name": "Ahmed Mabrook"
          },
          {
            "id": "5f8860b3-e669-4717-91bf-ddceb872fd55",
            "name": "Benjamin Kadel"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39662,
                "name": "Jetpack Compose"
              },
              {
                "id": 39663,
                "name": "Jetpack / Architecture Components"
              },
              {
                "id": 39678,
                "name": "Other (Please list in submission text)"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21048,
        "room": "Room 1",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "260687",
        "title": "What is the Android Cache Fix plugin and why do I need to solve my own cache misses?",
        "description": "This talk covers how to find cache misses, why cache misses happen, and why Gradle can't always automatically fix them for you. We'll also dive deep into the Android cache fix plugin to figure out some of the dirtiest cache misses in the Android ecosystem and why they still exist.\r\n\r\n",
        "startsAt": "2021-10-20T14:10:00",
        "endsAt": "2021-10-20T14:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "89694c9d-5de0-4f39-a50a-ed48d6eb56ca",
            "name": "Nelson Osacky"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39675,
                "name": "Open Source"
              },
              {
                "id": 39678,
                "name": "Other (Please list in submission text)"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21051,
        "room": "Room 4",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "178567",
        "title": "Game Development with Unity from an Android Point of View",
        "description": "Developing mobile games with Unity has become more and more popular these years, and Unity developers often need to tackle OS specific challenges.\r\n\r\nThrough this talk you will discover how to work with Unity as an Android Developer. You will see how to build Unity plugins using the JNI and Java/Kotlin, which is the most efficient way to link Unity with the Android framework.\r\n\r\nEvery Unity project can be exported as an Android Studio project with a Gradle support. You'll also see how you can integrate Unity inside a native Android Java/Kotlin application, or how to get a full control of the build process so you can benefit from the best of both worlds. ",
        "startsAt": "2021-10-20T15:10:00",
        "endsAt": "2021-10-20T15:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "462e6b97-01f9-44b1-864c-9d85bedf911b",
            "name": "Julien Salvi"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39678,
                "name": "Other (Please list in submission text)"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21052,
        "room": "Room 5",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "280462",
        "title": "Extending the build - AGP APIs for plugin developers",
        "description": "Have you ever wished there was an easy way to programatically inject or change values in the merged manifest?\r\nOr maybe you're looking for more flexibility than the Android DSL gives you for configuring variants of your build?\r\n\r\nWith the release of AGP 7.0, Android Gradle Plugin has a new set of stable APIs that Gradle plugin developers can depend on to customize the Android build with new functions, and even transform build artifacts in a safe and efficient manner, without the risk of breaking with each version or slowing down builds.\r\n\r\nIn this session, you'll learn the Gradle concepts required to take advantage of these new APIs, as well as see concrete examples of how to wire up your own Tasks to work with AGP.",
        "startsAt": "2021-10-20T16:10:00",
        "endsAt": "2021-10-20T16:50:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "503e4bf1-c8b1-4a0f-a936-3b76bfad1eab",
            "name": "Wojtek Kalici≈Ñski"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39678,
                "name": "Other (Please list in submission text)"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21051,
        "room": "Room 4",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "264629",
        "title": "Coding and mental illness. A survival guide.",
        "description": "Being a coder with mental health problems has very unique challenges, especially if you don't know you have them. After 8 years of medication for depression/anxiety, Chris got his diagnosis for ADHD at the age of 37 and the treatment changed his life. In an industry that is rife with imposter syndrome and where mental hath \"quirks\" are often perceived as professional flaws or gaps in knowledge, Chris will share his experiences and give concrete helpful suggestions to overcome these challenges, as well as explaining to \"neurotypical\" people how they can be better allies.",
        "startsAt": "2021-10-21T09:00:00",
        "endsAt": "2021-10-21T09:40:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "f53882b1-df66-4d6c-9ec1-888badcdd224",
            "name": "Chris Ward"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39671,
                "name": "Career & Leveling Up"
              },
              {
                "id": 39678,
                "name": "Other (Please list in submission text)"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21051,
        "room": "Room 4",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "262021",
        "title": "Bluetooth LE for Modern Android Development",
        "description": "Bluetooth Low Energy has had a rough time on Android. While the API was introduced back in Jelly Beans, it has suffered numerous bugs and flaws over the years. \r\n\r\nFortunately, things have improved since then. BLE is now easier to work with, much thanks to small additions to the platform APIs, but also with the introduction of new services and APIs in the framework.\r\n\r\nIn this session we will look at how to write apps for BLE peripherals like smart watches and other IoT devices. We'll look at best practices, common pitfalls, and even what to require from the engineers writing the embedded code for peripherals. \r\n\r\nHopefully this session will be useful for all who are working with BLE in any capacity, or simply have an interest to learn more.",
        "startsAt": "2021-10-21T09:50:00",
        "endsAt": "2021-10-21T10:30:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "79823093-1b16-4a2b-b0a9-ea4cd25b92f5",
            "name": "Erik Hellman"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39678,
                "name": "Other (Please list in submission text)"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21051,
        "room": "Room 4",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "269252",
        "title": "ü§ñ Automating key workflows in your daily developer life!",
        "description": "CI/CD\r\n\r\nIn this talk, I want to guide the audience through the tools I implemented and the scripts I built over time in our CI system to automate common tasks like:\r\n- Daily release deliveries to QA (releases run automatically only if there were any new commits since the last one)\r\n- Automated Git(Hub) tags creation for each release\r\n- Automated release notes included in the tags (for QA)\r\n- Automated code formatting with standard rules automatically shared across all the members of a team\r\n\r\nBonus: \r\n- How to have automated \"feature resales\"\r\n- How to create those scripts in order to make them reusable across different projects.\r\n\r\nI currently work with Bitrise, which means my example may include that tool (but the scripts are tool agnostic).",
        "startsAt": "2021-10-21T10:40:00",
        "endsAt": "2021-10-21T11:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "ac9cef8a-3072-4e52-8064-a5155be542b0",
            "name": "Alessandro Mautone"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39678,
                "name": "Other (Please list in submission text)"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21050,
        "room": "Room 3",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "273507",
        "title": "WebRTC on Android.  Simplier than you thought!",
        "description": "WebRTC is one of the main standards in Video/Audio communication, but unfortunately, it's quite hard to find enough information on how to work with it on Android. Documents are outdated, examples are simple and high level. We are going to dive deeper into WebRTC on Android! I'll tell you how to build it from sources and create a simple p2p video chat Android app.",
        "startsAt": "2021-10-21T13:40:00",
        "endsAt": "2021-10-21T14:20:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "61e8cdda-7b13-43d6-b69c-3bd65ebf8524",
            "name": "Artem Bagritsevich"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39675,
                "name": "Open Source"
              },
              {
                "id": 39678,
                "name": "Other (Please list in submission text)"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21051,
        "room": "Room 4",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "277792",
        "title": "From Ooops to Mobile DevOps: 7 Steps for Successful Mobile DevOps Transformation",
        "description": "Deploying Android app updates such as bug fixes, enhancements, or new features is significantly more complex than it is for web apps or backend services.\r\n\r\nFor mobile, you have little control over the official app publication platforms (Google Play Store) for mobile, so there is no guarantee your updates will be published immediately.\r\n\r\nFurthermore, even when updates are published, users will not receive those updates until they upgrade their apps through the app stores. This means that if a user has a mobile app version with a bug, they‚Äôll be stuck with that bug until a new version is released and they upgrade. As a result, the mobile app development life cycle is much less forgiving of bugs.\r\n\r\nIn this session, I will be talking about how to optimize Android app deployments from development to production including different and important tips and practices for developing, testing, releasing, and monitoring.\r\n\r\n\t\r\nTags: Development, Testing,  Best practices, App distribution",
        "startsAt": "2021-10-21T14:30:00",
        "endsAt": "2021-10-21T15:10:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "4aca1c6b-db77-4831-a2dd-c69015660468",
            "name": "Moataz Nabil"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39678,
                "name": "Other (Please list in submission text)"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21048,
        "room": "Room 1",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "272269",
        "title": "Automating Android Workflows with Github Actions",
        "description": "Github Actions is the new kid on block regarding CI/CD products, and particularly it has been attracting a lot of attention from Software Engineers given its seamless integration with Github. It is not surprising that it has been quickly adopted both at open-source projects and private-source projects, with Android being no exception to that\r\n\r\nIn this talk we'll review the fundamentals of Github Actions as a CI/CD platform and learn how to make the most of it when designing and implementing automations particularly important for Android projects. We'll learn about particularities and limitations one might find when moving a big Android project over Github Actions and review most of the common solutions we have for Android-specific use cases. \r\n\r\nTags : CI/CD, Automation, Github Actions, Mobile DevOps",
        "startsAt": "2021-10-21T16:20:00",
        "endsAt": "2021-10-21T17:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "31c510dd-848a-4b2f-91fa-c9994e3b4cf4",
            "name": "Ubiratan Soares"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39675,
                "name": "Open Source"
              },
              {
                "id": 39678,
                "name": "Other (Please list in submission text)"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21052,
        "room": "Room 5",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "284015",
        "title": "Crash-reporting taken to next-level",
        "description": "Monitoring app crashes is essential for app stability and the agility to respond to issues quickly. Most teams use Crashlytics from Firebase because it is powerful yet simple. Operating in 50+ countries and processing 10+ Millions of orders per day, we needed to take Crashlytics to the next-level.\r\n\r\nIn this talk, we would like to share our experience on how we built our custom crash-reporting tooling that is built using powerful tools like Google BigQuery, and Google Data Studio. Using Google BigQuery also gave us the ability to transform and clean our raw data and join with Firebase Analytics datasets. At the end of our presentation, we would like to present a couple of real-life scenarios and show you how we used our custom dashboard to decrease our root cause finding time and saved our engineers time more than 40%.",
        "startsAt": "2021-10-21T16:20:00",
        "endsAt": "2021-10-21T17:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "91d1e71d-2061-46ee-a765-08dfe0f11270",
            "name": "Tahsin Dane"
          },
          {
            "id": "4d8f72b6-e22a-4519-8d4e-ae3b5cbaef2b",
            "name": "Sevan Acemoglu"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39674,
                "name": "Case Studies / Research"
              },
              {
                "id": 39678,
                "name": "Other (Please list in submission text)"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21049,
        "room": "Room 2",
        "liveUrl": null,
        "recordingUrl": null
      },
      {
        "questionAnswers": [],
        "id": "245462",
        "title": "How to survive on Android and don't get killed",
        "description": "A cold-blooded war is raging on Android between ‚Äúwhat users can do with their devices‚Äù and ‚Äúhow much their device lasts on one charge‚Äù. Every new Android OS version is less merciful about your background processes. Different OEMs kill your apps straight away without asking if you do something useful for your users or not. New weapons of mass destruction are invented year by year. Their names? Doze mode V1!, Doze mode V2!, Background restrictions!, Adaptive battery! and more are coming this year whose evil names are yet to be known. But we can already imagine their devastating powers. \r\n\r\nSome OEMs are more cruel than others. The darkest warlords of them all? Samsung, Huawei, OnePlus and Xiaomi in that order. They employ elite trained assassins called task killers whose insidious ways are yet to be documented. \r\n\r\nIt seems impossible to survive, but there is hope! A small group of relentless developers (let‚Äôs call them the Resistance) did gather around a project dontkillmyapp.com. They have risen up against the evil hordes of kill -9. They have years of experience with long running processes and alarms on Android since the carefree times of Cupcake till the dawn of Pie. And they are here to share tips and guides with users and developers on how to survive in those dark times. Viva la Resistance! \r\n\r\nP.S. we have cookies and a guitar song at the end!",
        "startsAt": "2021-10-21T16:20:00",
        "endsAt": "2021-10-21T17:00:00",
        "isServiceSession": false,
        "isPlenumSession": false,
        "speakers": [
          {
            "id": "acc2c985-0086-4938-a627-7879ccff60b2",
            "name": "Petr Nalevka"
          },
          {
            "id": "67137704-969a-4a78-8583-0a8e8c0e514b",
            "name": "Ji≈ô√≠ Richter"
          }
        ],
        "categories": [
          {
            "id": 19531,
            "name": "Tags",
            "categoryItems": [
              {
                "id": 39661,
                "name": "What's New in Android"
              },
              {
                "id": 39664,
                "name": "Architecture"
              },
              {
                "id": 39673,
                "name": "Core Skills"
              },
              {
                "id": 39678,
                "name": "Other (Please list in submission text)"
              }
            ],
            "sort": 2
          }
        ],
        "roomId": 21048,
        "room": "Room 1",
        "liveUrl": null,
        "recordingUrl": null
      }
    ]
  }
]